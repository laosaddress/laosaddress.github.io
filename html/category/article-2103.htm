<!DOCTYPE html>
<html>

<head>
        <link rel="canonical" href="https://laosaddress.github.io/html/category/article-2103.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Python3利用Qt5实现简易的五子棋游戏_python - Laos Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/laosaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">
    <!-- Bootstrap CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/font-awesome/css/font-awesome.min.css">
    <!-- Google fonts - Poppins-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,600">
    <!-- Lightbox-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/css/lightbox.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/fontastic.css">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/style.default.css" id="theme-stylesheet">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/custom.css">
    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a08ccaf1644b67c8d98a3563104919a8";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- navbar-->
    <header class="header">
        <nav class="navbar navbar-expand-lg fixed-top">
            <div class="container">
                                <a href="/" class="navbar-brand">
                    Laos Address
                </a>
                
                <button type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler navbar-toggler-right">Menu<i class="fa fa-bars ml-2"></i></button>
                <div id="navbarSupportedContent" class="collapse navbar-collapse">
                    <ul class="navbar-nav ml-auto">
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/" class="nav-link">首页</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/html/category/" class="nav-link">文章分类</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">关于</a></li>
                        <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">联系</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Hero Section-->
    <section class="hero">
        <div class="container text-center">
            <h1>Python3利用Qt5实现简易的五子棋游戏_python</h1>
            <nav aria-label="breadcrumb" class="d-flex justify-content-center">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/" class="animsition-link">首页</a></li>
                    <li class="breadcrumb-item"><a href="/html/category/" class="animsition-link">文章分类</a></li>
                    <li aria-current="page" class="breadcrumb-item active">正文</li>
                </ol>
            </nav>
        </div>
    </section>
    <section>
        <div class="container">
            <div class="row" id="list">
                <div class="col-md-9">
                          				  				  				<p>要写出一个五子棋游戏，我们最先要解决的，就是如何下子，如何判断已经五子连珠，而不是如何绘制画面，因此我们先确定棋盘</p> <p>五子棋采用15*15的棋盘，因此，我们可以使用二维列表来创建一个棋盘，不妨认为0表示未放置棋子，1表示放置白子，2表示放置黑子。</p> <p>显而易见可以创建列表，<span style="color:#c0392b"><strong>注意不能使用*来复制列表</strong></span></p> <div class="ay1code"> <pre class="brush:py;">self.chess_board = [[0 for i in range(15)] for i in range(15)]</pre> </div> <p>下棋的步骤十分好做，只需要找到对应的索引进行赋值即可，下一步应该解决如何判断五子连珠的问题。</p> <p>每当我们落子结束后，应该判断是否已经完成五子连珠。对于刚放置的一颗棋子而言，可能的情况大致分为四种：</p> <p>1.水平<br />2.斜向右下<br />3.竖直<br />4.斜向右上</p> <p>要判断是否已经连珠成功，我们以刚放置的棋子为起点，先向前遍历4个棋子，并计算相同棋子的个数，一旦遇到不同的棋子，就停止，然后从起点向后遍历4个棋子，直到全部遍历完成或者棋子总数已经达到5个，就可以返回。我们只需要注意<strong>如何获得棋子的前后棋子</strong>以及<strong>棋盘的边界问题</strong>，棋子不可能超出棋盘，因此被遍历的棋子也不能超出棋盘。</p> <p>以水平为例，可以得到代码</p> <div class="ay1code"> <pre class="brush:py;">def judge_1(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if y - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x][y-i]:                          print(x,y-i)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if y + i &lt;=14:                      if self.chess_board[x][y] == self.chess_board[x][y+i]:                          print(x,y+i)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False</pre> </div> <p>以相似的步骤完成其余三种判断，就已经完成了五子棋游戏的核心要素了，剩下的就需要交给PyQt5来完成游戏的绘制来完善游戏了。</p> <p>我们创建一个类来继承QWidget类，创建一个窗口，之后我们需要创建几个属性来完成储存我们的数据信息</p> <div class="ay1code"> <pre class="brush:py;">#棋子的坐标  self.x = -1  self.y = -1  #区分玩家  #开始标签  self.flag = False  #储存已经下好的白子  self.white_chess = []  #储存已经下好的黑子  self.black_chess = []</pre> </div> <p>我们已经可以开始绘制棋盘，在Qt5中，如果我们需要进行绘制，我们应该<strong>重写</strong>paintEvent方法，这个方法会由程序自动调用执行。创建一个QPainter对象，将需要绘制的内容用begin与end方法包裹起来，就可以完成绘制。</p> <p>我们用drawLine方法来绘制线条，用drawEllipse方法来绘制棋子，使用setPen来更改线条样式，setBrush来更改棋子样式。</p> <p>得到代码<strong>（本段代码有参考他人代码，这是我第一次接触Qt的绘制）</strong></p> <p>--------------------GUI中的x轴竖直向下，y轴水平向右，因此绘制棋子时的x与y需要颠倒---------------</p> <div class="ay1code"> <pre class="brush:py;">#绘制棋盘与棋子      def paintEvent(self, e) -&gt; None:          qp = QPainter()          qp.begin(self)          qp.fillRect(self.rect(), QColor("light blue"))          qp.drawRect(self.rect())          qp.setBackground(QColor("yellow"))          qp.setPen(QPen(QColor(0, 0, 0), 2, Qt.SolidLine))          for i in range(15):              qp.drawLine(QPoint(30, 30 + 30 * i), QPoint(450, 30 + 30 * i))          for i in range(15):              qp.drawLine(QPoint(30 + 30 * i, 30), QPoint(30 + 30 * i, 450))          qp.setBrush(QColor(0, 0, 0))          key_points = [(3, 3), (11, 3), (3, 11), (11, 11), (7, 7)]          if len(self.black_chess) != 0:              for t in self.black_chess:                  #画黑子                  qp.drawEllipse(QPoint(30 + 30 * t[1], 30 + 30 * t[0]), 6, 6)          for t in key_points:              #棋盘的5个定点              qp.drawEllipse(QPoint(30 + 30 * t[0], 30 + 30 * t[1]), 3, 3)          qp.setBrush(QColor(255,255,255))          if len(self.white_chess) != 0:              for t in self.white_chess:                  #画白子                  qp.drawEllipse(QPoint(30 + 30 * t[1], 30 + 30 * t[0]), 6, 6)          qp.end()</pre> </div> <p>另一个需要在GUI中解决的问题就是，如何获取要下的棋子的坐标?我们可以通过重写鼠标事件来解决，重写单机事件mousePressEvent，并修改棋子的x坐标与y坐标即可，另外，用户不可能每次都恰巧点到我们规定的坐标点上，因此需要给出一个大致范围判断，这里我的方式是先获取坐标，然后根据坐标找到距离最近的点</p> <div class="ay1code"> <pre class="brush:py;">def mousePressEvent(self, e) -&gt; None:          if e.buttons() == QtCore.Qt.LeftButton:              if e.x() &gt; 15 and e.x() &lt; 465 and e.y() &gt; 15 and e.y() &lt; 465:                  x = e.x()/30 - e.x()//30                  y = e.y()/30 - e.y()//30                  self.y = (e.x()-30)//30 if x &lt; 0.5 else (e.x()-30)//30 + 1                  self.x = (e.y()-30)//30 if y &lt; 0.5 else (e.y()-30)//30 + 1                  if self.flag:                      print(self.x,self.y)                      if self.player % 2 == 1:                          if goBang.put_white_chess(self.x,self.y):                              self.player += 1                               print('黑子行动')                          else:                              print('白子行动')                          if goBang.judge(self.x,self.y):                              msg_box = QMessageBox(QMessageBox.Information, '提示', '白子获胜！')                              msg_box.exec_()                      else:                          if goBang.put_black_chess(self.x,self.y):                              self.player += 1                              print('白子行动')                          else:                              print('黑子行动')                          if goBang.judge(self.x,self.y):                              msg_box = QMessageBox(QMessageBox.Information, '提示', '黑子获胜！')                              msg_box.exec_()</pre> </div> <p>每当游戏完成，我们应该可以清空棋盘，也就是将所有储存数据的变量都重新初始化再重绘棋盘</p> <div class="ay1code"> <pre class="brush:py;">#清除棋盘，重开游戏      def clear(self) -&gt; None:          self.x = -1          self.y = -1          self.player = 0          self.flag = False          self.white_chess = []          self.black_chess = []          self.chess_board = [[0 for i in range(15)] for i in range(15)]          self.update()</pre> </div> <p>这样就大致结束了！！</p> <p>下面是全部代码：</p> <div class="ay1code"> <pre class="brush:py;">from PyQt5 import *  from PyQt5 import QtCore  from PyQt5.QtWidgets import *  from PyQt5.QtGui import *  from PyQt5.QtCore import *  import sys     class GoBang(QWidget):      #初始化棋盘      def __init__(self):          super().__init__()          self.setWindowTitle('五子棋Hi~ o(*￣▽￣*)ブ')          self.x = -1          self.y = -1          #区分玩家          self.player = 0          #开始标签          self.flag = False          #储存已经下好的白子          self.white_chess = []          #储存已经下好的黑子          self.black_chess = []          self.setFixedSize(800,600)          self.chess_board = [[0 for i in range(15)] for i in range(15)]          btn1 = QPushButton('开始',self)          btn1.setGeometry(500,100,50,30)          btn1.clicked.connect(self.setFlag)          btn2 = QPushButton('重开',self)          btn2.setGeometry(550,100,50,30)          btn2.clicked.connect(self.clear)          self.show()            #绘制棋盘与棋子      def paintEvent(self, e) -&gt; None:          qp = QPainter()          qp.begin(self)          qp.fillRect(self.rect(), QColor("light blue"))          qp.drawRect(self.rect())          qp.setBackground(QColor("yellow"))          qp.setPen(QPen(QColor(0, 0, 0), 2, Qt.SolidLine))          for i in range(15):              qp.drawLine(QPoint(30, 30 + 30 * i), QPoint(450, 30 + 30 * i))          for i in range(15):              qp.drawLine(QPoint(30 + 30 * i, 30), QPoint(30 + 30 * i, 450))          qp.setBrush(QColor(0, 0, 0))          key_points = [(3, 3), (11, 3), (3, 11), (11, 11), (7, 7)]          if len(self.black_chess) != 0:              for t in self.black_chess:                  #画黑子                  qp.drawEllipse(QPoint(30 + 30 * t[1], 30 + 30 * t[0]), 6, 6)          for t in key_points:              #棋盘的5个定点              qp.drawEllipse(QPoint(30 + 30 * t[0], 30 + 30 * t[1]), 3, 3)          qp.setBrush(QColor(255,255,255))          if len(self.white_chess) != 0:              for t in self.white_chess:                  #画白子                  qp.drawEllipse(QPoint(30 + 30 * t[1], 30 + 30 * t[0]), 6, 6)          qp.end()         #更改标签，开始游戏      def setFlag(self) -&gt; None:          self.flag = True         def mousePressEvent(self, e) -&gt; None:          if e.buttons() == QtCore.Qt.LeftButton:              if e.x() &gt; 15 and e.x() &lt; 465 and e.y() &gt; 15 and e.y() &lt; 465:                  x = e.x()/30 - e.x()//30                  y = e.y()/30 - e.y()//30                  self.y = (e.x()-30)//30 if x &lt; 0.5 else (e.x()-30)//30 + 1                  self.x = (e.y()-30)//30 if y &lt; 0.5 else (e.y()-30)//30 + 1                  if self.flag:                      print(self.x,self.y)                      if self.player % 2 == 1:                          if goBang.put_white_chess(self.x,self.y):                              self.player += 1                               print('黑子行动')                          else:                              print('白子行动')                          if goBang.judge(self.x,self.y):                              msg_box = QMessageBox(QMessageBox.Information, '提示', '白子获胜！')                              msg_box.exec_()                      else:                          if goBang.put_black_chess(self.x,self.y):                              self.player += 1                              print('白子行动')                          else:                              print('黑子行动')                          if goBang.judge(self.x,self.y):                              msg_box = QMessageBox(QMessageBox.Information, '提示', '黑子获胜！')                              msg_box.exec_()                       #下白子      def put_white_chess(self,x:int,y:int) -&gt; bool:          if self.chess_board[x][y] != 0:              msg_box = QMessageBox(QMessageBox.Information, '提示', '这个位置已经有棋子了!')              msg_box.exec_()              return False          else:              self.chess_board[x][y] = 1              self.white_chess.append((x,y))              self.update()              return True         #下黑子      def put_black_chess(self,x:int,y:int) -&gt; bool:          if self.chess_board[x][y] != 0:              msg_box = QMessageBox(QMessageBox.Information, '提示', '这个位置已经有棋子了!')              msg_box.exec_()              return False          else:              self.chess_board[x][y] = 2              self.black_chess.append((x,y))              self.update()              return True         #清除棋盘，重开游戏      def clear(self) -&gt; None:          self.x = -1          self.y = -1          self.player = 0          self.flag = False          self.white_chess = []          self.black_chess = []          self.chess_board = [[0 for i in range(15)] for i in range(15)]          self.update()         #判断是否已经五子连珠      def judge(self,x:int,y:int) -&gt; bool:          if self.judge_1(x,y) or self.judge_2(x,y) or self.judge_3(x,y) or self.judge_4(x,y):              return True          return False         #判断横线      def judge_1(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if y - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x][y-i]:                          print(x,y-i)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if y + i &lt;=14:                      if self.chess_board[x][y] == self.chess_board[x][y+i]:                          print(x,y+i)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False         #判断右下线      def judge_2(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if x-i &gt;= 0 and y - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x-i][y-i]:                          print(x-i,y-i)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if x + i &lt;= 14 and y + i &lt;= 14:                      if self.chess_board[x][y] == self.chess_board[x+i][y+i]:                          print(x+i,y+i)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False         #判断竖线      def judge_3(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if x - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x-i][y]:                          print(x-i,y)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if x + i &lt;= 14:                      if self.chess_board[x][y] == self.chess_board[x+i][y]:                          print(x+i,y)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False         #判断右上线      def judge_4(self,x:int,y:int) -&gt; bool:          count = 1          if self.chess_board[x][y] != 0:              for i in range(1,5):                  if x - i &gt;= 0 and y + i &lt;= 14:                      if self.chess_board[x][y] == self.chess_board[x-i][y+i]:                          print(x-i,y+i)                          count += 1                      else:                          break                  else:                      break              for i in range(1,5):                  if x + i &lt;= 14 and y - i &gt;= 0:                      if self.chess_board[x][y] == self.chess_board[x+i][y-i]:                          print(x+i,y-i)                          count += 1                      else:                          break                  else:                      break          if count == 5:              return True          return False     #程序入口  if __name__ == '__main__':        app = QApplication(sys.argv)        goBang = GoBang()      sys.exit(app.exec_())</pre> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2102.htm">idea配置本地maven仓库</a></p>
                                                        <p>下一个：<a href="/html/category/article-2104.htm">Redis内存淘汰机制</a></p>
                                                    </div>
                                        </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6582.htm" title="宠物诊所绝育（宠物诊所做绝育）">宠物诊所绝育（宠物诊所做绝育）</a></li>
                        <li class="py-2"><a href="/html/category/article-6163.htm" title="狗粮成本多少钱一斤（狗粮制作成本是多少）">狗粮成本多少钱一斤（狗粮制作成本是多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-6629.htm" title="动物注射疫苗简报怎么写的（动物疫苗注射工作注意事项）">动物注射疫苗简报怎么写的（动物疫苗注射工作注意事项）</a></li>
                        <li class="py-2"><a href="/html/category/article-6905.htm" title="动物医院好评模板100字怎么写的 动物医院好评模板100字怎么写的啊">动物医院好评模板100字怎么写的 动物医院好评模板100字怎么写的啊</a></li>
                        <li class="py-2"><a href="/html/category/article-7134.htm" title="2020年中国动物疫苗市场（中国动物疫苗网）">2020年中国动物疫苗市场（中国动物疫苗网）</a></li>
                        <li class="py-2"><a href="/html/category/article-6904.htm" title="猫驱虫多久一次体内体外多少钱（猫咪体内驱虫多久钱）">猫驱虫多久一次体内体外多少钱（猫咪体内驱虫多久钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7456.htm" title="宠物医院大众点评评语（宠物医院大众点评100字点评***）">宠物医院大众点评评语（宠物医院大众点评100字点评***）</a></li>
                        <li class="py-2"><a href="/html/category/article-6813.htm" title="狗粮生产机器设备多少钱一个（生产狗粮的设备多少钱）">狗粮生产机器设备多少钱一个（生产狗粮的设备多少钱）</a></li>
                        <li class="py-2"><a href="/html/category/article-7457.htm" title="给动物打的狂犬疫苗有效期多久啊（给动物打狂犬疫苗打几针）">给动物打的狂犬疫苗有效期多久啊（给动物打狂犬疫苗打几针）</a></li>
                        <li class="py-2"><a href="/html/category/article-7549.htm" title="内江宠物狗商家（内江宠物狗商家电话号码）">内江宠物狗商家（内江宠物狗商家电话号码）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
        <footer class="main-footer">
        <div class="copyrights">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6 text-center text-lg-left">
                        <p class="copyrights-text mb-3 mb-lg-0">
                          Laos Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-center text-lg-right">
                        <ul class="list-inline social mb-0">
                            <li class="list-inline-item"><a href="#" class="social-link"><i class="fa fa-facebook"></i></a><a href="#" class="social-link"><i class="fa fa-twitter"></i></a><a href="#" class="social-link"><i class="fa fa-youtube-play"></i></a><a href="#" class="social-link"><i class="fa fa-vimeo"></i></a><a href="#" class="social-link"><i class="fa fa-pinterest"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- JavaScript files-->
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery.cookie/jquery.cookie.js"> </script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/js/lightbox.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/front.js"></script>
</body>

</html>