<!DOCTYPE html>
<html>

<head>
        <link rel="canonical" href="https://laosaddress.github.io/html/category/article-2181.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>SpringBoot 如何统一后端返回格式 - Laos Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/laosaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">
    <!-- Bootstrap CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/font-awesome/css/font-awesome.min.css">
    <!-- Google fonts - Poppins-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,600">
    <!-- Lightbox-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/css/lightbox.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/fontastic.css">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/style.default.css" id="theme-stylesheet">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/custom.css">
    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a08ccaf1644b67c8d98a3563104919a8";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- navbar-->
    <header class="header">
        <nav class="navbar navbar-expand-lg fixed-top">
            <div class="container">
                                <a href="/" class="navbar-brand">
                    Laos Address
                </a>
                
                <button type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler navbar-toggler-right">Menu<i class="fa fa-bars ml-2"></i></button>
                <div id="navbarSupportedContent" class="collapse navbar-collapse">
                    <ul class="navbar-nav ml-auto">
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/" class="nav-link">首页</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/html/category/" class="nav-link">文章分类</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">关于</a></li>
                        <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">联系</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Hero Section-->
    <section class="hero">
        <div class="container text-center">
            <h1>SpringBoot 如何统一后端返回格式</h1>
            <nav aria-label="breadcrumb" class="d-flex justify-content-center">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/" class="animsition-link">首页</a></li>
                    <li class="breadcrumb-item"><a href="/html/category/" class="animsition-link">文章分类</a></li>
                    <li aria-current="page" class="breadcrumb-item active">正文</li>
                </ol>
            </nav>
        </div>
    </section>
    <section>
        <div class="container">
            <div class="row" id="list">
                <div class="col-md-9">
                          				  				  				<p>在前后端分离的项目中后端返回的格式一定要友好，不然会对前端的开发人员带来很多的工作量。那么SpringBoot如何做到统一的后端返回格式呢？今天我们一起来看看。</p> <h1 id="为什么要对springboot返回统一的标准格式">为什么要对SpringBoot返回统一的标准格式</h1> <p>在默认情况下，SpringBoot的返回格式常见的有三种：</p> <h2 id="返回string">返回String</h2> <pre><code class="language-java">@GetMapping("/hello") public String hello() {     return  "hello"; }</code></pre> <p>此时调用接口获取到的返回值是这样：</p> <blockquote> <p>hello</p> </blockquote> <h2 id="返回自定义对象">返回自定义对象</h2> <pre><code class="language-java">@GetMapping("/student") public Student getStudent() {         Student student = new Student();         student.setId(1);         student.setName("didiplus");         return  student; }   //student的类 @Data public class Student {     private Integer id;     private String name; }</code></pre> <p>此时调用接口获取到的返回值是这样：</p> <blockquote> <p>{"id":1,"name":"didiplus"}</p> </blockquote> <h2 id="接口异常">接口异常</h2> <pre><code class="language-java">@GetMapping("/error") public int error(){     int i = 9/0;     return i; }</code></pre> <p>此时调用接口获取到的返回值是这样：<br /><img decoding="async" src="https://cdn.nlark.com/yuque/0/2022/png/2113616/1650787359545-7c7b0dd7-e5ad-4554-8441-dacf437db0ba.png#clientId=u4410b66d-a50b-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=168&amp;id=ud3cc3c1d&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=168&amp;originWidth=721&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=16423&amp;status=done&amp;style=none&amp;taskId=u0c130ef0-00f6-44cf-84a0-d0f23f5685f&amp;title=&amp;width=721" alt="image.png"></p> <blockquote> <p>SpringBoot的版本是v2.6.7，</p> </blockquote> <h1 id="定义返回对象">定义返回对象</h1> <pre><code class="language-java">package com.didiplus.common.web.response;  import lombok.Data;  import java.io.Serializable;  /**  * Author: didiplus  * Email: 972479352@qq.com  * CreateTime: 2022/4/24  * Desc: Ajax 返 回 JSON 结 果 封 装 数 据  */  @Data public class Result&lt;T&gt; implements Serializable {      /**      * 是否返回成功      */     private boolean success;      /**      * 错误状态      */     private int code;      /***      * 错误信息      */     private String msg;      /**      * 返回数据      */     private T data;      /**      * 时间戳      */     private long timestamp ;       public Result (){         this.timestamp = System.currentTimeMillis();     }     /**      * 成功的操作      */     public static &lt;T&gt; Result&lt;T&gt; success() {         return  success(null);     }      /**      * 成 功 操 作 , 携 带 数 据      */     public static &lt;T&gt; Result&lt;T&gt; success(T data){         return success(ResultCode.RC100.getMessage(),data);     }      /**      * 成 功 操 作, 携 带 消 息      */     public static &lt;T&gt; Result&lt;T&gt; success(String message) {         return success(message, null);     }          /**          * 成 功 操 作, 携 带 消 息 和 携 带 数 据          */     public static &lt;T&gt; Result&lt;T&gt; success(String message, T data) {         return success(ResultCode.RC100.getCode(), message, data);     }      /**      * 成 功 操 作, 携 带 自 定 义 状 态 码 和 消 息      */     public static &lt;T&gt; Result&lt;T&gt; success(int code, String message) {         return success(code, message, null);     }      public static &lt;T&gt; Result&lt;T&gt; success(int code,String message,T data) {         Result&lt;T&gt; result = new Result&lt;T&gt;();         result.setCode(code);         result.setMsg(message);         result.setSuccess(true);         result.setData(data);         return result;     }      /**      * 失 败 操 作, 默 认 数 据      */     public static &lt;T&gt; Result&lt;T&gt; failure() {         return failure(ResultCode.RC100.getMessage());     }      /**      * 失 败 操 作, 携 带 自 定 义 消 息      */     public static &lt;T&gt; Result&lt;T&gt; failure(String message) {         return failure(message, null);     }      /**      * 失 败 操 作, 携 带 自 定 义 消 息 和 数 据      */     public static &lt;T&gt; Result&lt;T&gt; failure(String message, T data) {         return failure(ResultCode.RC999.getCode(), message, data);     }      /**      * 失 败 操 作, 携 带 自 定 义 状 态 码 和 自 定 义 消 息      */     public static &lt;T&gt; Result&lt;T&gt; failure(int code, String message) {         return failure(ResultCode.RC999.getCode(), message, null);     }      /**      * 失 败 操 作, 携 带 自 定 义 状 态 码 , 消 息 和 数 据      */     public static &lt;T&gt; Result&lt;T&gt; failure(int code, String message, T data) {         Result&lt;T&gt; result = new Result&lt;T&gt;();         result.setCode(code);         result.setMsg(message);         result.setSuccess(false);         result.setData(data);         return result;     }      /**      * Boolean 返 回 操 作, 携 带 默 认 返 回 值      */     public static &lt;T&gt; Result&lt;T&gt; decide(boolean b) {         return decide(b, ResultCode.RC100.getMessage(), ResultCode.RC999.getMessage());     }      /**      * Boolean 返 回 操 作, 携 带 自 定 义 消 息      */     public static &lt;T&gt; Result&lt;T&gt; decide(boolean b, String success, String failure) {         if (b) {             return success(success);         } else {             return failure(failure);         }     } }</code></pre> <h1 id="定义状态码">定义状态码</h1> <pre><code class="language-java">package com.didiplus.common.web.response;  import lombok.Getter;  /**  * Author: didiplus  * Email: 972479352@qq.com  * CreateTime: 2022/4/24  * Desc: 统 一 返 回 状 态 码  */ public enum ResultCode {     /**操作成功**/     RC100(100,"操作成功"),     /**操作失败**/     RC999(999,"操作失败"),     /**服务限流**/     RC200(200,"服务开启限流保护,请稍后再试!"),     /**服务降级**/     RC201(201,"服务开启降级保护,请稍后再试!"),     /**热点参数限流**/     RC202(202,"热点参数限流,请稍后再试!"),     /**系统规则不满足**/     RC203(203,"系统规则不满足要求,请稍后再试!"),     /**授权规则不通过**/     RC204(204,"授权规则不通过,请稍后再试!"),     /**access_denied**/     RC403(403,"无访问权限,请联系管理员授予权限"),     /**access_denied**/     RC401(401,"匿名用户访问无权限资源时的异常"),     /**服务异常**/     RC500(500,"系统异常，请稍后重试"),      INVALID_TOKEN(2001,"访问令牌不合法"),     ACCESS_DENIED(2003,"没有权限访问该资源"),     CLIENT_AUTHENTICATION_FAILED(1001,"客户端认证失败"),     USERNAME_OR_PASSWORD_ERROR(1002,"用户名或密码错误"),     UNSUPPORTED_GRANT_TYPE(1003, "不支持的认证模式");      /**自定义状态码**/     @Getter     private final int code;      /**      * 携 带 消 息      */     @Getter     private final String message;     /**      * 构 造 方 法      */     ResultCode(int code, String message) {          this.code = code;          this.message = message;     } }</code></pre> <h1 id="统一返回格式">统一返回格式</h1> <pre><code class="language-java">    @GetMapping("/hello")     public Result&lt;String&gt; hello() {         return  Result.success("操作成功","hello");     }</code></pre> <p>此时调用接口获取到的返回值是这样：</p> <pre><code class="language-java">{"success":true,"code":100,"msg":"操作成功","data":"hello","timestamp":1650785058049}</code></pre> <p>这样确实已经实现了我们想要的结果，我在很多项目中看到的都是这种写法，在Controller层通过Result.success()对返回结果进行包装后返回给前端。这样显得不够专业而且不够优雅。 所以呢我们需要对代码进行优化，目标就是不要每个接口都手工制定Result返回值。</p> <h1 id="高级实现方式">高级实现方式</h1> <p>要优化这段代码很简单，我们只需要借助SpringBoot提供的ResponseBodyAdvice即可。</p> <h2 id="responsebodyadvice的源码">ResponseBodyAdvice的源码：</h2> <pre><code class="language-java">public interface ResponseBodyAdvice&lt;T&gt; { 		/** 		* 是否支持advice功能 		* true 支持，false 不支持 		*/     boolean supports(MethodParameter var1, Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; var2);  	  /** 		* 对返回的数据进行处理 		*/     @Nullable     T beforeBodyWrite(@Nullable T var1, MethodParameter var2, MediaType var3, Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; var4, ServerHttpRequest var5, ServerHttpResponse var6); }</code></pre> <p>只需要编写一个具体实现类即可</p> <pre><code class="language-java">@RestControllerAdvice public class ResponseAdvice  implements ResponseBodyAdvice&lt;Object&gt; {       @Autowired     ObjectMapper objectMapper;      @Override     public boolean supports(MethodParameter returnType, Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; converterType) {         return true;     }      @SneakyThrows     @Override     public Object beforeBodyWrite(Object body, MethodParameter returnType, MediaType selectedContentType, Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; selectedConverterType, ServerHttpRequest request, ServerHttpResponse response)  {         if (body instanceof  String){             return objectMapper.writeValueAsString(Result.success(ResultCode.RC100.getMessage(),body));         }         return Result.success(ResultCode.RC100.getMessage(),body);     } }</code></pre> <blockquote> <p>需要注意两个地方：<br /> @RestControllerAdvice注解  @RestControllerAdvice是@RestController注解的增强，可以实现三个方面的功能：</p> <ol> <li>全局异常处理</li> <li>全局数据绑定</li> <li>全局数据预处理</li> </ol> </blockquote> <h2 id="string类型判断">String类型判断</h2> <pre><code class="language-java">        if (body instanceof  String){             return objectMapper.writeValueAsString(Result.success(ResultCode.RC100.getMessage(),body));         }</code></pre> <p>这段代码一定要加，如果Controller直接返回String的话，SpringBoot是直接返回，故我们需要手动转换成json。  经过上面的处理我们就再也不需要通过ResultData.success()来进行转换了，直接返回原始数据格式，SpringBoot自动帮我们实现包装类的封装。</p> <pre><code class="language-java">    @GetMapping("/hello")     public String hello() {         return "hello,didiplus";     }       @GetMapping("/student")     public Student getStudent() {         Student student = new Student();         student.setId(1);         student.setName("didiplus");         return student;     }</code></pre> <p>此时我们调用接口返回的数据结果为：</p> <pre><code class="language-json">{ 	"success": true, 	"code": 100, 	"msg": "操作成功", 	"data": "hello,didiplus", 	"timestamp": 1650786993454 }</code></pre> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2180.htm">vue在table表中悬浮显示数据及右键菜单_vue.js_</a></p>
                                                        <p>下一个：<a href="/html/category/article-2182.htm">java8 Instant.now()遇到的问题</a></p>
                                                    </div>
                                        </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7364.htm" title="猫咪三针疫苗的作用（猫咪三针疫苗包括哪些）">猫咪三针疫苗的作用（猫咪三针疫苗包括哪些）</a></li>
                        <li class="py-2"><a href="/html/category/article-7779.htm" title="宠物粮厂家（宠物粮厂家排名）">宠物粮厂家（宠物粮厂家排名）</a></li>
                        <li class="py-2"><a href="/html/category/article-7226.htm" title="tvb历年搞笑剧（风之刀剧情）深度揭秘，">tvb历年搞笑剧（风之刀剧情）深度揭秘，</a></li>
                        <li class="py-2"><a href="/html/category/article-7411.htm" title="领养宠物要钱吗现在（领养宠物麻烦吗）">领养宠物要钱吗现在（领养宠物麻烦吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-7686.htm" title="离我最近的猫市场（买小猫1元一只）">离我最近的猫市场（买小猫1元一只）</a></li>
                        <li class="py-2"><a href="/html/category/article-7778.htm" title="猫三联三针一共多少钱（猫三联一针价格）">猫三联三针一共多少钱（猫三联一针价格）</a></li>
                        <li class="py-2"><a href="/html/category/article-6951.htm" title="冬瓜炖鸭汤的做法窍门窍门(冬瓜炖鸭汤的做法大全)">冬瓜炖鸭汤的做法窍门窍门(冬瓜炖鸭汤的做法大全)</a></li>
                        <li class="py-2"><a href="/html/category/article-8008.htm" title="中国猫粮生产基地（国内猫粮工厂）">中国猫粮生产基地（国内猫粮工厂）</a></li>
                        <li class="py-2"><a href="/html/category/article-7272.htm" title="厦门同安宠物医院哪家好 厦门同安宠物医院哪家好点">厦门同安宠物医院哪家好 厦门同安宠物医院哪家好点</a></li>
                        <li class="py-2"><a href="/html/category/article-7043.htm" title="动物疫苗可以去畜牧局批发吗（动物疫苗经销商）">动物疫苗可以去畜牧局批发吗（动物疫苗经销商）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
        <footer class="main-footer">
        <div class="copyrights">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6 text-center text-lg-left">
                        <p class="copyrights-text mb-3 mb-lg-0">
                          Laos Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-center text-lg-right">
                        <ul class="list-inline social mb-0">
                            <li class="list-inline-item"><a href="#" class="social-link"><i class="fa fa-facebook"></i></a><a href="#" class="social-link"><i class="fa fa-twitter"></i></a><a href="#" class="social-link"><i class="fa fa-youtube-play"></i></a><a href="#" class="social-link"><i class="fa fa-vimeo"></i></a><a href="#" class="social-link"><i class="fa fa-pinterest"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- JavaScript files-->
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery.cookie/jquery.cookie.js"> </script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/js/lightbox.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/front.js"></script>
</body>

</html>