<!DOCTYPE html>
<html>

<head>
        <link rel="canonical" href="https://laosaddress.github.io/html/category/article-2106.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>springboot(十四)使用spring retry - Laos Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/laosaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">
    <!-- Bootstrap CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/font-awesome/css/font-awesome.min.css">
    <!-- Google fonts - Poppins-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,600">
    <!-- Lightbox-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/css/lightbox.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/fontastic.css">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/style.default.css" id="theme-stylesheet">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/custom.css">
    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a08ccaf1644b67c8d98a3563104919a8";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- navbar-->
    <header class="header">
        <nav class="navbar navbar-expand-lg fixed-top">
            <div class="container">
                                <a href="/" class="navbar-brand">
                    Laos Address
                </a>
                
                <button type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler navbar-toggler-right">Menu<i class="fa fa-bars ml-2"></i></button>
                <div id="navbarSupportedContent" class="collapse navbar-collapse">
                    <ul class="navbar-nav ml-auto">
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/" class="nav-link">首页</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/html/category/" class="nav-link">文章分类</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">关于</a></li>
                        <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">联系</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Hero Section-->
    <section class="hero">
        <div class="container text-center">
            <h1>springboot(十四)使用spring retry</h1>
            <nav aria-label="breadcrumb" class="d-flex justify-content-center">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/" class="animsition-link">首页</a></li>
                    <li class="breadcrumb-item"><a href="/html/category/" class="animsition-link">文章分类</a></li>
                    <li aria-current="page" class="breadcrumb-item active">正文</li>
                </ol>
            </nav>
        </div>
    </section>
    <section>
        <div class="container">
            <div class="row" id="list">
                <div class="col-md-9">
                          				  				  				<div id="content_views" class="htmledit_views"> <p>在调用第三方接口或者使用mq时，会出现网络抖动，连接超时等网络异常，所以需要重试。</p> <p>1、引入jar包</p> <pre><code class="language-java">&lt;dependency&gt; 			&lt;groupId&gt;org.springframework.retry&lt;/groupId&gt; 			&lt;artifactId&gt;spring-retry&lt;/artifactId&gt; 		&lt;/dependency&gt; 		&lt;dependency&gt; 			&lt;groupId&gt;org.aspectj&lt;/groupId&gt; 			&lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt; 		&lt;/dependency&gt;</code></pre> <p> 2、模拟网络异常，创建一个异常</p> <pre><code class="language-java">package com.demo.exception;  import lombok.Builder; import lombok.Getter;  /**  * Created by huguoju on 2017/4/13.  */ @Builder @Getter public class RetryException extends RuntimeException {     private String code;     private String message; }</code></pre> <p></p> <p>3、在Application上添加@EnableRetry开启Retry服务</p> <pre><code class="language-java">@EnableRetry public class SpringbootApplication {<!-- --></code></pre> <p> 4、在service模拟访问异常，抛出异常</p> <pre><code class="language-java">package com.demo.service.impl;  import com.demo.exception.RetryException; import com.demo.service.RetryService; import lombok.extern.slf4j.Slf4j; import org.springframework.retry.annotation.Backoff; import org.springframework.retry.annotation.Recover; import org.springframework.retry.annotation.Retryable; import org.springframework.stereotype.Service;  /**  * Created by huguoju on 2017/4/13.  */ @Service("retryService") @Slf4j public class RetryServiceImpl implements RetryService {     int i=1;     @Override     @Retryable(value = {RuntimeException.class},maxAttempts = 4,backoff = @Backoff(delay = 1000l,multiplier = 1))     public String retry() {         log.info("测试retry");         i++;//生产环境此处应该为调用第三方接口，判断接口返回code         if(i==3){             return i+"";         }         RetryException retryException=RetryException.builder().code("9999").message("连接超时").build();         throw retryException;     }        @Recover     public String recover(RetryException e){         log.info(e.getMessage());         return "6";     } }</code></pre> <p> 说明：</p> <pre style="background-color:rgb(255,255,255)"><span style="color:#808000; font-size:13.5pt; font-family:宋体">@Retryable：标注此注解的方法在发生异常时会进行重试</span><pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)">参数说明：value：抛出指定异常才会重试</pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)">          include：和value一样，默认为空，当exclude也为空时，默认所以异常</pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)">          exclude：指定不处理的异常</pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)">          maxAttempts:最大重试次数，默认3次</pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)">          backoff：重试等待策略，默认使用@Backoff，@Backoff的value默认为1000L，multiplier（指定延迟倍数）</pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)">                   默认为0，表示固定暂停1秒后进行重试，如果把multiplier设置为2，则第一次重试为1秒，第二次为</pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)">                   2秒，第三次为4秒</pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)">@Recover：用于@Retryable重试失败后处理方法，此方法里的异常一定要是@Retryable方法里抛出的异常，否则不会调用</pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)">          这个方法</pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)"></pre> <pre style="font-size:13.5pt; font-family:宋体; color:rgb(128,128,0); background-color:rgb(255,255,255)"></pre> <pre style="color:rgb(128,128,0); background-color:rgb(255,255,255)"><span style="font-family:SimSun; font-size:10px"></span></pre> <pre style="background-color:rgb(255,255,255)"><span style="font-family:SimSun; font-size:10px">5、在其他service里调用上面的service抛出异常</span></pre> <pre style="background-color:rgb(255,255,255)"><span style="font-family:SimSun; font-size:10px"></span><pre><code class="language-cpp">@Override     public Map testRetry() {         Map map= Maps.newHashMap();         String s=retryService.retry();         if (s.equals("3")){             log.info("成功啦啦啦啦啦啦啦啦");         }else {             log.info("失败了");         }         map.put("result",s);         return map;     }</code></pre> <p></p> <pre style="background-color:rgb(255,255,255)"><span style="font-family:SimSun; font-size:10px">6、定义测试controller</span></pre> <pre style="background-color:rgb(255,255,255)"><span style="font-family:SimSun; font-size:10px"></span><pre><code class="language-java">package com.demo.controller;  import com.demo.service.RetryService; import com.demo.service.TestService; import com.google.common.collect.Maps; import io.swagger.annotations.Api; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.MediaType; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;  import java.util.Map;  /**  * Created by huguoju on 2017/4/13.  */ @RestController @RequestMapping("retry") @Api(value = "重试机制",tags = "重试机制") public class RetryController {     @Autowired     public TestService testService;     @RequestMapping(value = "testRetry",method = {RequestMethod.POST,RequestMethod.GET},produces = MediaType.APPLICATION_JSON_UTF8_VALUE)     public Map testRetry(){         Map map=Maps.newHashMap();         try {             map= testService.testRetry();             return map;         }catch (Exception e){             e.printStackTrace();             return map;         }     } }</code></pre> <p>访问controller，看日志输出</p> <pre style="background-color:rgb(255,255,255)"><span style="font-family:SimSun; font-size:10px"></span><pre><code class="language-java">15:21:30 WARN  [qtp1129243682-21]  com.atomikos.icatch.imp.TransactionServiceImp - Attempt to create a transaction with a timeout that exceeds com.atomikos.icatch.max_timeout - truncating to: 300000 15:21:30 INFO  [qtp1129243682-21]  com.atomikos.icatch.imp.BaseTransactionManager - createCompositeTransaction ( 10000000 ): created new ROOT transaction with id 10.3.5.31.tm0000100002 15:21:30 INFO  [qtp1129243682-21]  com.demo.service.impl.RetryServiceImpl - 测试retry 15:21:31 INFO  [qtp1129243682-21]  com.demo.service.impl.RetryServiceImpl - 测试retry 15:21:31 INFO  [qtp1129243682-21]  com.demo.service.impl.TestServiceImpl - 成功啦啦啦啦啦啦啦啦 15:21:31 INFO  [qtp1129243682-21]  com.atomikos.icatch.imp.CompositeTransactionImp - commit() done (by application) of transaction 10.3.5.31.tm0000100002</code></pre> <p>要测试@Recover，即一直异常，只需要把RetryServiceImpl里的if(i==3)改为if(i==6),把调用service里if(s.equals("3"))改完if(s.equals("6)),然后重新访问，日志：</p> <pre style="background-color:rgb(255,255,255)"><span style="font-family:SimSun; font-size:10px"></span><pre><code class="language-java">15:26:54 WARN  [qtp1870436181-20]  com.atomikos.icatch.imp.TransactionServiceImp - Attempt to create a transaction with a timeout that exceeds com.atomikos.icatch.max_timeout - truncating to: 300000 15:26:54 INFO  [qtp1870436181-20]  com.atomikos.icatch.imp.BaseTransactionManager - createCompositeTransaction ( 10000000 ): created new ROOT transaction with id 10.3.5.31.tm0000100003 15:26:54 INFO  [qtp1870436181-20]  com.demo.service.impl.RetryServiceImpl - 测试retry 15:26:55 INFO  [qtp1870436181-20]  com.demo.service.impl.RetryServiceImpl - 测试retry 15:26:56 INFO  [qtp1870436181-20]  com.demo.service.impl.RetryServiceImpl - 测试retry 15:26:57 INFO  [qtp1870436181-20]  com.demo.service.impl.RetryServiceImpl - 测试retry 15:26:57 INFO  [qtp1870436181-20]  com.demo.service.impl.RetryServiceImpl - 连接超时 15:26:57 INFO  [qtp1870436181-20]  com.demo.service.impl.TestServiceImpl - 成功啦啦啦啦啦啦啦啦 15:26:57 INFO  [qtp1870436181-20]  com.atomikos.icatch.imp.CompositeTransactionImp - commit() done (by application) of transaction 10.3.5.31.tm0000100003</code></pre> <pre style="background-color:rgb(255,255,255)"><span style="font-family:SimSun; font-size:10px"></span></pre> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2105.htm">Spring 源码（2）Spring IOC 容器 前戏准备工作</a></p>
                                                        <p>下一个：<a href="/html/category/article-2107.htm">spring.profiles.active的使用</a></p>
                                                    </div>
                                        </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2205.htm" title="PHP如何通过引用传递">PHP如何通过引用传递</a></li>
                        <li class="py-2"><a href="/html/category/article-2235.htm" title="JavaScript 编写猜拳游戏">JavaScript 编写猜拳游戏</a></li>
                        <li class="py-2"><a href="/html/category/article-4109.htm" title="实现 ResponseBodyAdvice 定制化JSON 返回字段">实现 ResponseBodyAdvice 定制化JSON 返回字段</a></li>
                        <li class="py-2"><a href="/html/category/article-2216.htm" title="Spring Boot教程 | 第八篇：Spring Boot整合knife4j（swagger-bootstrap-ui）实现自动API文档">Spring Boot教程 | 第八篇：Spring Boot整合knife4j（swagger-bootstrap-ui）实现自动API文档</a></li>
                        <li class="py-2"><a href="/html/category/article-2208.htm" title="分库分表实现方式Client和Proxy，性能和维护性该怎么选？">分库分表实现方式Client和Proxy，性能和维护性该怎么选？</a></li>
                        <li class="py-2"><a href="/html/category/article-3136.htm" title="使用类在C ++中实现矢量数量">使用类在C ++中实现矢量数量</a></li>
                        <li class="py-2"><a href="/html/category/article-4137.htm" title="python 元组传参 *args 字典传参 **kwargs 的用法">python 元组传参 *args 字典传参 **kwargs 的用法</a></li>
                        <li class="py-2"><a href="/html/category/article-2206.htm" title="c++语法拾遗，一些细节与特性">c++语法拾遗，一些细节与特性</a></li>
                        <li class="py-2"><a href="/html/category/article-2221.htm" title="使用react-router-dom@6,如何完成路由守卫这样的功能——使用高阶组件的包裹。">使用react-router-dom@6,如何完成路由守卫这样的功能——使用高阶组件的包裹。</a></li>
                        <li class="py-2"><a href="/html/category/article-3743.htm" title="K8S 将 pod 调度到指定 nodes 上运行">K8S 将 pod 调度到指定 nodes 上运行</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
        <footer class="main-footer">
        <div class="copyrights">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6 text-center text-lg-left">
                        <p class="copyrights-text mb-3 mb-lg-0">
                          Laos Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-center text-lg-right">
                        <ul class="list-inline social mb-0">
                            <li class="list-inline-item"><a href="#" class="social-link"><i class="fa fa-facebook"></i></a><a href="#" class="social-link"><i class="fa fa-twitter"></i></a><a href="#" class="social-link"><i class="fa fa-youtube-play"></i></a><a href="#" class="social-link"><i class="fa fa-vimeo"></i></a><a href="#" class="social-link"><i class="fa fa-pinterest"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- JavaScript files-->
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery.cookie/jquery.cookie.js"> </script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/js/lightbox.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/front.js"></script>
</body>

</html>