<!DOCTYPE html>
<html>

<head>
        <link rel="canonical" href="https://laosaddress.github.io/html/category/article-1989.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Metalama简介4.使用Fabric操作项目或命名空间 - Laos Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/laosaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">
    <!-- Bootstrap CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/font-awesome/css/font-awesome.min.css">
    <!-- Google fonts - Poppins-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,600">
    <!-- Lightbox-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/css/lightbox.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/fontastic.css">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/style.default.css" id="theme-stylesheet">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/custom.css">
    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a08ccaf1644b67c8d98a3563104919a8";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- navbar-->
    <header class="header">
        <nav class="navbar navbar-expand-lg fixed-top">
            <div class="container">
                                <a href="/" class="navbar-brand">
                    Laos Address
                </a>
                
                <button type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler navbar-toggler-right">Menu<i class="fa fa-bars ml-2"></i></button>
                <div id="navbarSupportedContent" class="collapse navbar-collapse">
                    <ul class="navbar-nav ml-auto">
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/" class="nav-link">首页</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/html/category/" class="nav-link">文章分类</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">关于</a></li>
                        <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">联系</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Hero Section-->
    <section class="hero">
        <div class="container text-center">
            <h1>Metalama简介4.使用Fabric操作项目或命名空间</h1>
            <nav aria-label="breadcrumb" class="d-flex justify-content-center">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/" class="animsition-link">首页</a></li>
                    <li class="breadcrumb-item"><a href="/html/category/" class="animsition-link">文章分类</a></li>
                    <li aria-current="page" class="breadcrumb-item active">正文</li>
                </ol>
            </nav>
        </div>
    </section>
    <section>
        <div class="container">
            <div class="row" id="list">
                <div class="col-md-9">
                          				  				  				<p>使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题<br />Metalama简介1. 不止是一个.NET跨平台的编译时AOP框架<br />Metalama简介2.利用Aspect在编译时进行消除重复代码<br />Metalama简介3.自定义.NET项目中的代码分析</p> <h1 id="metalama中的fabric可以做什么">Metalama中的Fabric可以做什么</h1> <p><code>Fabric</code>通过修改项目、命名空间、类型来达到一些效果，这引起修改包括：添加<code>Aspect</code>或添加代码分析</p> <h1 id="使用fabric为指定的方法添加aspect">使用Fabric为指定的方法添加Aspect</h1> <p>前文中我们写过一个简单的<code>Aspect</code>:</p> <pre><code class="language-C#">public class LogAttribute : OverrideMethodAspect {     public override dynamic? OverrideMethod()     {         Console.WriteLine(meta.Target.Method.ToDisplayString() + " 开始运行.");         var result = meta.Proceed();         Console.WriteLine(meta.Target.Method.ToDisplayString() + " 结束运行.");         return result;     } }</code></pre> <p>当我们使用它时，我们要在对应的方法上添加这个<code>Attribute</code>:</p> <pre><code class="language-C#">[Log] private static int Add(int a, int b) //... ...</code></pre> <p>那么当我们有一个<code>Aspect</code>要在项目中大量使用时，在每个方法上添加这个<code>Aspect</code>当然是一种方法，但是这种方法有2个缺点：</p> <ol> <li>包含大量的重复代码<code>[Log]</code></li> <li>对于原代码的入侵性太强</li> </ol> <p>此时我们就可以使用<code>Fabric</code>为所有符合要求的方法添加指定的<code>Aspect</code>:</p> <pre><code class="language-C#">internal class Fabric : ProjectFabric {     // 这个是重写项目的Fabric中修改项目的方法     public override void AmendProject(IProjectAmender amender)     {         // 添加 LogAttribute 到符合规则的方法上         // 为名为 Add 且 private 的方法添加 LogAttribute         amender.WithTargetMembers(c =>                 c.Types.SelectMany(t => t.Methods)                        .Where(t =>                               t.Name == "Add" &&                               t.Accessibility == Metalama.Framework.Code.Accessibility.Private)             ).AddAspect(t => new LogAttribute());     } }</code></pre> <p>这样就可以在不入侵现有代码的情况下为指定的方法添加<code>Aspect</code>。</p> <h1 id="使用fabric添加代码分析">使用Fabric添加代码分析</h1> <p>上文中我们提到，我们可以通过<code>Aspect</code>为代码添加代码分析，当我们要将一个包含（且仅包含）代码分析的<code>Aspect</code>应用于一批代码时，当然我们可以按本文<code>示例1</code>中的方法，直接使用<code>Fabric</code>将包含代码分析的<code>Aspect</code>应用于指定代码。</p> <p>但还有另外一种方法，我们可以直接在<code>Fabric</code>中定义应用于指定代码的代码分析。</p> <p>下面示例，我们验证所有类中的私有字段必须符合<code>_camelCase</code>,并且使用一个<code>NamespaceFabric</code>来实现:</p> <pre><code class="language-C#">namespace FabricCamelCaseDemo; class Fabric : NamespaceFabric {     private static readonly DiagnosticDefinition<string> _warning = new(  "DEMO04",  Severity.Warning,  "'{0}'必须使用驼峰命名法并以'_'开头");     // 这个是命名空间的Fabric中修改命名空间规则 的方法     public override void AmendNamespace(INamespaceAmender amender)     { 	    // 取所有非static 的private的字段，并添加代码分析         amender.WithTargetMembers(c =>                                     c.AllTypes.SelectMany(t=>t.Fields)                                     .Where(t => t.Accessibility == Accessibility.Private && !t.IsStatic                                     )                                  )             //preview 0.5.8之前为 RegisterFinalValidator             .Validate(this.FinalValidator);     }      private void FinalValidator(in DeclarationValidationContext context)     {         var fullname = context.Declaration.ToDisplayString();         var fieldName = fullname.Split('.').LastOrDefault();         if (fieldName!=null && (!fieldName.StartsWith("_") || !char.IsLower(fieldName[1])))         {             context.Diagnostics.Report(_warning.WithArguments(fieldName));         }     } }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b47b918dc071361c6e285c9ace241445.jpg" alt="Metalama简介4.使用Fabric操作项目或命名空间"></p> <p>当然因为当前使用的是<code>NamespaceFabric</code>所以该规则只应用于当前命名空间如，我们如果在另外一个命名空间中定义一个违反规则的字段的话，并不会有警告。</p> <pre><code class="language-C#">namespace FabricCamelCase;  internal class OtherNamespace {     int count = 0;     int _total = 0;     public int Add()     {         count++;         _total++;         return count + _total;     } }</code></pre> <h1 id="使用typefabric为类型动态添加方法">使用TypeFabric为类型动态添加方法</h1> <p>开始前伪造一个需求，假设我有一个类<code>AddUtils</code>专门处理加法操作，它里面应该有从2个到15个参数的Add方法15个（当然我知道，可以使用<code>params</code>等方法实现，所以这里是个伪需求）。<br /> 最终效果为</p> <pre><code class="language-C#">public class AddUtils {     public int Add2(int x1, int x2)     {         var result = 0;         result += x1;         result += x2;         return 2;     }     public int Add3(int x1, int x2, int x3)     {         var result = 0;         result += x1;         result += x2;         result += x3;         return 3;     } 	// 以此类推... 下面省去若干方法 }</code></pre> <p>那么我们可以用<code>Metalama</code>如此实现</p> <pre><code class="language-C#">using System.Reflection.Emit; using Metalama.Framework.Aspects; using Metalama.Framework.Fabrics;  public class AddUtils {     private class Fabric : TypeFabric     {         // 实现的方法体         [Template]         public int MethodTemplate()         {             var num = (int) meta.Tags["nums"]!;             var result = 0;             foreach (var targetParameter in meta.Target.Parameters)             {                 result += targetParameter.Value;             }              return num;         }          public override void AmendType(ITypeAmender amender)         {             for (var i = 2; i < 15; i++)             {                 // 生成一个方法                 var methodBuilder = amender.Advices.IntroduceMethod(                     amender.Type,                     nameof(this.MethodTemplate),                     tags: new TagDictionary { ["nums"] = i });                 // 方法名                 methodBuilder.Name = "Add" + i;                 // 添加参数                 for (int parameterIndex = 1; parameterIndex <= i; parameterIndex++)                 {                     methodBuilder.AddParameter($"x{parameterIndex}", typeof(int));                 }             }         }     } }</code></pre> <h1 id="引用">引用</h1> <p>本章源代码：https://github.com/chsword/metalama-demo<br /> Metalama官方文档:https://doc.metalama.net/<br /> Metalama Nuget包:https://www.nuget.org/packages/Metalama.Framework/0.5.11-preview</p> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-1988.htm">PHP如何访问全局类</a></p>
                                                        <p>下一个：<a href="/html/category/article-1990.htm">Vue 引入外部css样式两种方式 import 和link ； mixin.js的使用</a></p>
                                                    </div>
                                        </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6012.htm" title="宠物批发零售的货源在哪里找（宠物批发商城）">宠物批发零售的货源在哪里找（宠物批发商城）</a></li>
                        <li class="py-2"><a href="/html/category/article-4336.htm" title="千王之王重出江湖国语版（不要告诉别人）千王之王全集40国语版1，山崎敬一，龙四，">千王之王重出江湖国语版（不要告诉别人）千王之王全集40国语版1，山崎敬一，龙四，</a></li>
                        <li class="py-2"><a href="/html/category/article-4529.htm" title="瑞鹏宠物医院在线咨询免费（瑞鹏宠物医院客服电话）">瑞鹏宠物医院在线咨询免费（瑞鹏宠物医院客服电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-6207.htm" title="猫瘟打疫苗（猫瘟打疫苗还能活吗?）">猫瘟打疫苗（猫瘟打疫苗还能活吗?）</a></li>
                        <li class="py-2"><a href="/html/category/article-4307.htm" title="宠物猫疫苗价格表图片及价格（宠物疫苗多少钱一针猫咪）">宠物猫疫苗价格表图片及价格（宠物疫苗多少钱一针猫咪）</a></li>
                        <li class="py-2"><a href="/html/category/article-4306.htm" title="欧阳娜娜翟子路 图片（不要告诉别人）欧阳娜娜翟子路微博，轩辕剑如烟，邱非，">欧阳娜娜翟子路 图片（不要告诉别人）欧阳娜娜翟子路微博，轩辕剑如烟，邱非，</a></li>
                        <li class="py-2"><a href="/html/category/article-4138.htm" title="在VS2015下配置websocket++,并用C++搭建一个简单的客户端">在VS2015下配置websocket++,并用C++搭建一个简单的客户端</a></li>
                        <li class="py-2"><a href="/html/category/article-3438.htm" title="java使用es中三种查询用法from size、search after、scroll">java使用es中三种查询用法from size、search after、scroll</a></li>
                        <li class="py-2"><a href="/html/category/article-4456.htm" title="宠物粮食批发市场在哪 宠物粮食批发市场在哪里">宠物粮食批发市场在哪 宠物粮食批发市场在哪里</a></li>
                        <li class="py-2"><a href="/html/category/article-6013.htm" title="宠爱国际动物医院电话北京（北京宠爱国际动物医疗）">宠爱国际动物医院电话北京（北京宠爱国际动物医疗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">48</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
        <footer class="main-footer">
        <div class="copyrights">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6 text-center text-lg-left">
                        <p class="copyrights-text mb-3 mb-lg-0">
                          Laos Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-center text-lg-right">
                        <ul class="list-inline social mb-0">
                            <li class="list-inline-item"><a href="#" class="social-link"><i class="fa fa-facebook"></i></a><a href="#" class="social-link"><i class="fa fa-twitter"></i></a><a href="#" class="social-link"><i class="fa fa-youtube-play"></i></a><a href="#" class="social-link"><i class="fa fa-vimeo"></i></a><a href="#" class="social-link"><i class="fa fa-pinterest"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- JavaScript files-->
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery.cookie/jquery.cookie.js"> </script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/js/lightbox.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/front.js"></script>
</body>

</html>