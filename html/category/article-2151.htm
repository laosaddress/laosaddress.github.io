<!DOCTYPE html>
<html>

<head>
        <link rel="canonical" href="https://laosaddress.github.io/html/category/article-2151.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Vue入门组件实战案例详解 - Laos Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/laosaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">
    <!-- Bootstrap CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/font-awesome/css/font-awesome.min.css">
    <!-- Google fonts - Poppins-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,600">
    <!-- Lightbox-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/css/lightbox.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/fontastic.css">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/style.default.css" id="theme-stylesheet">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/custom.css">
    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a08ccaf1644b67c8d98a3563104919a8";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- navbar-->
    <header class="header">
        <nav class="navbar navbar-expand-lg fixed-top">
            <div class="container">
                                <a href="/" class="navbar-brand">
                    Laos Address
                </a>
                
                <button type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler navbar-toggler-right">Menu<i class="fa fa-bars ml-2"></i></button>
                <div id="navbarSupportedContent" class="collapse navbar-collapse">
                    <ul class="navbar-nav ml-auto">
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/" class="nav-link">首页</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/html/category/" class="nav-link">文章分类</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">关于</a></li>
                        <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">联系</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Hero Section-->
    <section class="hero">
        <div class="container text-center">
            <h1>Vue入门组件实战案例详解</h1>
            <nav aria-label="breadcrumb" class="d-flex justify-content-center">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/" class="animsition-link">首页</a></li>
                    <li class="breadcrumb-item"><a href="/html/category/" class="animsition-link">文章分类</a></li>
                    <li aria-current="page" class="breadcrumb-item active">正文</li>
                </ol>
            </nav>
        </div>
    </section>
    <section>
        <div class="container">
            <div class="row" id="list">
                <div class="col-md-9">
                          				  				  				<div class="toc"> <div class="toc-container-header"><span style="font-size: 2em;">Vue 组件</span></div> </div> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/695b5aa95581f0a17da0e1e01ed25503.jpg" alt="Vue入门组件实战案例详解"></p> <h2 id="axios实现数据请求">axios实现数据请求</h2> <pre><code class="language-python">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt;     &lt;script src="https://unpkg.com/axios/dist/axios.min.js"&gt;&lt;/script&gt;  &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt;     &lt;ul&gt;         &lt;li v-for="film in films_list"&gt;             &lt;p&gt;电影名字是：{{film.name}}&lt;/p&gt;             &lt;img :src="film.poster" alt="" width="100px" height="150px"&gt;             &lt;p&gt;电影介绍：{{film.synopsis}}&lt;/p&gt;         &lt;/li&gt;     &lt;/ul&gt;  &lt;/div&gt;  &lt;/body&gt; &lt;script&gt;      var vm = new Vue({         el: '#app',         data: {             films_list:[]         },         created() {             axios.get('http://127.0.0.1:5000/films').then(res =&gt; {                 console.log(res.data)                 this.films_list=res.data.data.films             })          }     }) &lt;/script&gt; &lt;/html&gt;</code></pre> <pre><code class="language-python">from flask import Flask,make_response,jsonify  app=Flask(__name__) @app.route('/films') def films():     import json     with open('./movie.json','r',encoding='utf-8') as f:         res=json.load(f)     obj = make_response(jsonify(res))     obj.headers['Access-Control-Allow-Origin']='*'     return obj  if __name__ == '__main__':     app.run()</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e704aa31d2f8d698ddc20655f1efd3d9.jpg" alt="Vue入门组件实战案例详解"></p> <hr/> <h2 id="计算属性">计算属性</h2> <p>我们可以通过计算属性<code>computed</code>来缓存计算，什么意思呢？</p> <p>在Vue中我们可以使用插值来展示数据，插值的普通函数，只要页面一刷新，函数就会重新运算，不管和函数有关没关的值都会变，函数也会重新计算，导致运行效率降低；</p> <p>那么我们可以将自定义函数写在computed中来控制，把函数当成属性来用，调用不需要加括号，只有这个函数使用的属性(变量)发生变化，函数才重新运算，这样做可以减轻压力，减少资源浪费</p> <h3 id="案例一首字母大写">案例一：首字母大写</h3> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;计算属性&lt;/title&gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js"&gt;&lt;/script&gt;     &lt;link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css" &gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt;     &lt;div style="font-size: 20px"&gt;         输入内容：&lt;input type="text" v-model="mytext"&gt; ----》 {{mytext.substring(0,1).toUpperCase()+mytext.substring(1)}}         &lt;br&gt;&lt;br&gt;         &lt;p&gt;函数绑定(会刷新页面，也不推荐)：&lt;input type="text" :value="getName()"&gt;&lt;/p&gt;         &lt;p&gt;计算属性(推荐)：&lt;input type="text" :value="getName1"&gt;&lt;/p&gt;     &lt;/div&gt;      &lt;hr&gt;     &lt;div style="font-size: 20px"&gt;          &lt;p&gt;输入内容：&lt;input type="text" v-model="mytext1"&gt; -----》{{mytext1}}&lt;/p&gt;     &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;script&gt;     var vm = new Vue({         el: '#app',         data: {             mytext: '',             mytext1:''         },         methods:{             getName(){                 console.log('函数方式，我执行了')                 return this.mytext.substring(0,1).toUpperCase()+this.mytext.substring(1)             }         },         //计算属性         computed:{             getName1(){                 console.log('计算属性，我执行了')                 return this.mytext.substring(0,1).toUpperCase()+this.mytext.substring(1)             }          }     }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d00eae1a36c54c45638d990f91d7ae11.jpg" alt="Vue入门组件实战案例详解"></p> <p>我们可以发现只有和属性相关的才会打印，如果下面输入内容只是打印了普通函数，就算函数内和<code>mytext1</code>不相关</p> <h3 id="案例二过滤案例">案例二：过滤案例</h3> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;过滤案例&lt;/title&gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/vue/2.6.12/vue.min.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="box"&gt;     &lt;p&gt;&lt;input type="text" v-model="myText"  placeholder="请输入要筛选的内容:"&gt;&lt;/p&gt;     &lt;ul&gt;         &lt;li v-for="data in newList"&gt;{{data}}&lt;/li&gt;     &lt;/ul&gt; &lt;/div&gt; &lt;/body&gt; &lt;script&gt;     var vm = new Vue({         el: '#box',         data: {             myText: '',             dataList: ['a', 'at', 'atom', 'be', 'beyond', 'cs', 'csrf'],         },          computed:{              newList(){                 var _this = this                 console.log('执行了',_this)                  var datalist2 = _this.dataList.filter(function(item){                     console.log(_this)                      return item.indexOf(_this.myText) &gt; -1                  })                 return datalist2              }         }     }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/76d9c8d7c5b0bda74890273bba054081.jpg" alt="Vue入门组件实战案例详解"></p> <hr/> <p></p> <h2 id="监听属性">监听属性</h2> <p><strong><code>watch</code>来设置监听属性，当<code>mytext</code>发生变化，就会执行和mytext绑定的函数方法</strong></p> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt;      &lt;input type="text" v-model="mytext"&gt;---&gt;{{mytext}}   &lt;/div&gt;  &lt;/body&gt; &lt;script&gt;     var vm = new Vue({         el: '#app',         data: {             mytext: '',         },         watch: {             // 只要mytext发生变化，就会执行该函数             mytext: function () {                 console.log('我变化了，执行')              }         }       }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9f700299e3a5f7a15dcd3c1abd89a8e5.jpg" alt="Vue入门组件实战案例详解"></p> <hr/> <h2 id="局部组件">局部组件</h2> <blockquote> <p><strong>写在<code>components</code>里的是局部组件，位置被限制，只能再局部使用</strong></p> </blockquote> <p>比如如下例子中，<code>Top</code>组件只能在只能再id为app的标签(div)内使用，<code>Top</code>组件内如果想再定义子组件，只能在该组件内的<code>template</code>中的<code>div</code>内使用</p> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt;     &lt;Top&gt;&lt;/Top&gt;     &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;     &lt;Bottom&gt;&lt;/Bottom&gt; &lt;/div&gt;  &lt;/body&gt; &lt;script&gt;     var vm = new Vue({         el: '#app',         data: {},         // 定义再这里面的叫局部组件，只能再局部使用，只能再id为app的标签内使用         components: {             'Top': {                 //写在一个div里                 template: `                     &lt;div&gt;                         &lt;h1 style="background: pink;font-size: 60px;text-align: center"&gt;{{name}}&lt;/h1&gt;                         &lt;hr&gt;                         &lt;button @click="handleC"&gt;点我看美女&lt;/button&gt;                     &lt;/div&gt;                 `,                 //data是函数，可以设置返回值                 data() {                     return {                         name: "我是头部"                     }                 },                 methods: {                     handleC() {                         alert('美女')                     }                 },             },             'Bottom': {                 template: `                     &lt;div&gt;                         &lt;hr&gt;                         &lt;h1 style="background: green;font-size: 60px;text-align: center"&gt;{{name}}&lt;/h1&gt;                      &lt;/div&gt;                 `,                 data() {                     return {                         name: "我是尾部"                     }                 },              },          },       }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/90d6bfc41f1bfce20327183ec6612768.jpg" alt="Vue入门组件实战案例详解"></p> <hr/> <h2 id="全局组件">全局组件</h2> <p><strong>任意位置都可以使用</strong>，<strong>但是也得是在vue实例托管的div范围内</strong></p> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt;     &lt;top&gt;&lt;/top&gt;   &lt;/div&gt;  &lt;/body&gt; &lt;script&gt;     // 定义全局组件，任意位置都可以用，局部内也可以使用     Vue.component('top', {             template: `                 &lt;div&gt;                     &lt;h1 style="background: pink;font-size: 60px;text-align: center"&gt;{{name}}&lt;/h1&gt;                     &lt;hr&gt;                     &lt;button @click="handleC"&gt;点我看美女&lt;/button&gt;                 &lt;/div&gt;             `,             data() {                 return {                     name: "我是头部"                 }             },             methods: {                 handleC() {                     alert('美女')                 }             },          },)      var vm = new Vue({         el: '#app',     }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/19350023bae09a052d3459c1af4e68f6.jpg" alt="Vue入门组件实战案例详解"></p> <hr/> <h2 id="组件通信之父传子">组件通信之父传子</h2> <p>组件间data数据不同享，数据传递，如果我们想从父组件传递到子组件数据通过<strong><code>props</code></strong>自定义属性来实现，比如如下例子：</p> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js"&gt;&lt;/script&gt;     &lt;link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css" &gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt;     子组件显示：&lt;top :value="handleName"&gt;&lt;/top&gt;     &lt;hr&gt;     父组件输入内容：&lt;input type="text" v-model="handleName"&gt;  &lt;/div&gt;  &lt;/body&gt; &lt;script&gt;      Vue.component('top', {         template: ` &lt;div&gt;                     &lt;h1 style="background: tomato;font-size: 30px;text-align: center"&gt;{{value}}&lt;/h1&gt;                     &lt;/div&gt;             `,         // 必须叫props，数组内放自定义属性的名字         props:{             value: String,  // key是自定义属性名，value是类型名，如果是别的类型就报错         },         //props也可以写成数组的形式，不带验证功能         // props:['value',]     })     var vm = new Vue({         el: '#app',         data: {             handleName: ''         }     }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a15ed318fb667a023d8aceb1c50bee35.jpg" alt="Vue入门组件实战案例详解"></p> <hr/> <h2 id="组件通信之子传父">组件通信之子传父</h2> <p><strong>ps:Vue内置的对象都以$xx出现</strong></p> <p>我们可以通过自定义事件来实现子组件向父组件传递数据，在子组件中使用<code>$emit('自定义事件',参数)</code>来实现</p> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js"&gt;&lt;/script&gt;     &lt;link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css" &gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt; &lt;top @myevent="handleRecv"&gt;&lt;/top&gt;     &lt;hr&gt;   &lt;h1 style="background: green;font-size: 60px;text-align: center"&gt;父组件&lt;/h1&gt;  &lt;p&gt;接收子组件发送的数据：{{childText}}&lt;/p&gt; &lt;/div&gt;  &lt;/body&gt; &lt;script&gt;      Vue.component('top', {         template: ` &lt;div&gt;                         &lt;h1 style="background: tomato;font-size: 60px;text-align: center"&gt;{{myheader}}&lt;/h1&gt;                         &lt;p&gt;子组件输入内容：&lt;input type="text" v-model="text"&gt;&lt;/p&gt;                         &lt;p&gt;&lt;button class="btn-success"  @click="handleSend"&gt;向父组件发送数据&lt;/button&gt;&lt;/p&gt;                     &lt;/div&gt;             `,         data(){             return {                 myheader:'子组件',                 text:''             }         },         methods:{             handleSend(){                 //myevent是自定义事件，代表将子组件的text交给myevent事件处理                 this.$emit('myevent',this.text)             }         }      })     var vm = new Vue({         el: '#app',         data: {             //接收子组件的数据             childText:''         },         methods: {             handleRecv(data){                 // 接收参数，赋值给父组件的childText                 this.childText=data             }         }     }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6de974b2d4987d6b31cd54cd10324bec.jpg" alt="Vue入门组件实战案例详解"></p> <hr/> <h2 id="ref属性组件间通信">ref属性（组件间通信）</h2> <h3 id="普通标签使用">普通标签使用</h3> <p><strong>普通标签使用ref属性，通过<code>$refs</code>获取到的就是ref属性所在的标签，获取到的是一个对象，如果多个标签写了ref属性，那么就将所有带ref属性的标签弄到一个对象中，可以对html进行操作设置等，如下示例：</strong></p> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js"&gt;&lt;/script&gt;     &lt;link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css" &gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt;     &lt;h1 style="align-content: center"&gt;普通标签使用ref&lt;/h1&gt;     &lt;p&gt;&lt;input type="text" ref="myinput"&gt;&lt;/p&gt;     &lt;p&gt;&lt;img src="" height="100px" width="100px" ref="myimg"&gt;&lt;/p&gt;     &lt;p&gt;&lt;button @click="handleC"&gt;点我&lt;/button&gt; &lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;script&gt;      let vm = new Vue({         el: '#app',         data: {              text:''         },         methods: {             handleC(){                 console.log('我被点了')                 console.log(this.$refs)  // 是所有标签写了ref属性的对象{myinput:真正的标签，myimg:真正的标签}                 console.log(this.$refs.myinput.value)                 //设置值                 this.$refs.myinput.value='HammerZe'                 //设置src属性，显示图片                 this.$refs.myimg.src='https://img0.baidu.com/it/u=3608430476,1945954109&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=JPEG?w=500&amp;h=494'             }         }     }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/28104cafe30cbc045fcfe39cfb49e7c8.jpg" alt="Vue入门组件实战案例详解"></p> <h3 id="组件使用ref属性">组件使用ref属性</h3> <p><strong>ref属性，如果放在组件上，就是当前组件对象</strong></p> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.min.js"&gt;&lt;/script&gt;     &lt;link href="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/css/bootstrap.min.css" &gt;     &lt;script src="https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="app"&gt; &lt;!-- 组件使用ref属性   --&gt; &lt;top ref="top"&gt;&lt;/top&gt; &lt;p&gt;通信：&lt;input type="text" v-model="text"&gt;&lt;/p&gt; &lt;p&gt;父组件按钮：&lt;button @click="handleC"&gt;点我&lt;/button&gt;&lt;/p&gt; &lt;/p&gt; &lt;/div&gt; &lt;/body&gt; &lt;script&gt;    Vue.component('top', {         template: `             &lt;div&gt;                 &lt;h1&gt;{{myheader}}&lt;/h1&gt;                 &lt;p&gt;子组件按钮：&lt;button @click="handleC"&gt;点我看美女&lt;/button&gt;&lt;/p&gt;                 &lt;hr&gt;             &lt;/div&gt;         `,         data() {             return {                 myheader: "头部",             }         },         methods:{             handleC(){                 alert("美女")             }         }        },)     let vm = new Vue({         el: '#app',         data: {              text:''         },         methods: {         //放在组件上         handleC() {              console.log(this.$refs.top) //VueComponent&nbsp;{_uid: 1, _isVue: true, $options: {…}, _renderProxy: Proxy, _self: VueComponent,&nbsp;…}             /*子传父*/             // 父组件拿子组件的值             console.log(this.$refs.top.myheader)             // this.text=this.$refs.top.myheader             // 父组件调用子组件的方法             this.$refs.top.handleC()              /*父传子*/             this.$refs.top.myheader=this.text         }         }     }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1bb44a9db72e2265c5c14a02c98ed0ab.jpg" alt="Vue入门组件实战案例详解"></p> <h2 id="事件总线不常用">事件总线（不常用）</h2> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="box"&gt;     &lt;child1&gt;&lt;/child1&gt;     &lt;child2&gt;&lt;/child2&gt; &lt;/div&gt; &lt;/body&gt; &lt;script&gt;     var bus=new Vue() //new一个vue的实例，就是中央事件总线     Vue.component('child1', {         template: `&lt;div&gt;             &lt;input type="text" ref="mytext"&gt;             &lt;button @click="handleClick"&gt;点我&lt;/button&gt;         &lt;/div&gt;`,         methods:{             handleClick(){                 bus.$emit('suibian',this.$refs.mytext.value) //发布消息，名字跟订阅消息名一致             }         }     })     Vue.component('child2', {         template: `&lt;div&gt;                     &lt;div&gt;收到的消息 {{msg}}&lt;/div&gt;                     &lt;/div&gt;`,         data(){             return {msg:''}         },         mounted(){             //生命周期，当前组件dom创建完后悔执行             console.log('当前组件dom创建完后悔执行')             //订阅消息             bus.$on('suibian',(item)=&gt;{                 console.log('收到了',item)                 this.msg=item             })         }     })     var vm = new Vue({         el: '#box',         data: {},         methods: {             handleClick() {                 console.log(this)                 //this.$refs.mytext 获取到input控件，取出value值                 console.log(this.$refs.mytext.value)                 console.log(this.$refs.mychild.text)                 // this.$refs.mychild.add()                 this.$refs.mychild.add('传递参数')              }         }      }) &lt;/script&gt; &lt;/html&gt;</code></pre> <h2 id="动态组件和keep-alive">动态组件和keep-alive</h2> <p><strong>动态组件：实现点击不同的连接显示不同的页面，实现跳转，使用<code>component</code>标签，用<code>is</code>属性绑定，指定哪个显示哪个</strong></p> <p><strong>keep-alive：通过keep-alive标签实现组件不销毁，保留原来输入的内容</strong></p> <pre><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;script src="./js/vue.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;style&gt;     #menu {         font-size: 18px;         font-weight: bold;     }      #menu li {         text-decoration: none; /*去掉前面的圆点*/         list-style: none;         float: left;         margin-right: 20px;      }  &lt;/style&gt; &lt;body&gt; &lt;div id="app"&gt;     &lt;ul id="menu"&gt;         &lt;li @click="changeC('index')"&gt;首页&lt;/li&gt; &amp;nbsp;         &lt;li @click="changeC('order')" &gt;订单&lt;/li&gt;         &lt;li @click="changeC('good')"&gt;商品&lt;/li&gt;     &lt;/ul&gt;       &lt;keep-alive&gt;         &lt;component :is='who'&gt;&lt;/component&gt;     &lt;/keep-alive&gt;   &lt;/div&gt;  &lt;/body&gt; &lt;script&gt;     //三个组件     Vue.component('index', {         template: `             &lt;div style="overflow:hidden;"&gt;                 &lt;h1&gt;首页内容&lt;/h1&gt;             &lt;/div&gt;         `,     },)     //保留输入的订单信息     Vue.component('order', {         template: `             &lt;div&gt;                 &lt;h1&gt;订单内容&lt;/h1&gt;                 请输入要查询的订单：&lt;input type="text"&gt;             &lt;/div&gt;         `,     },)     Vue.component('good', {         template: `             &lt;div&gt;                 &lt;h1&gt;商品内容&lt;/h1&gt;             &lt;/div&gt;         `,     },)      var vm = new Vue({         el: '#app',         data: {             //默认显示index             who: 'index'          },         methods: {             changeC(data) {                 this.who = data             }         }      }) &lt;/script&gt; &lt;/html&gt;</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/0498fc538a0e19404d8674381c9e5ce9.jpg" alt="Vue入门组件实战案例详解"></p> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2150.htm">mysql中时间的储存方式_如何在MySQL 中存储日期？</a></p>
                                                        <p>下一个：<a href="/html/category/article-2152.htm">学习JVM-虚拟机栈，程序计数器和本地方法接口与本地方法栈</a></p>
                                                    </div>
                                        </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-6031.htm" title="动物防疫疫苗管理工作方案最新文件（动物防疫条件及防疫制度执行年度报告）">动物防疫疫苗管理工作方案最新文件（动物防疫条件及防疫制度执行年度报告）</a></li>
                        <li class="py-2"><a href="/html/category/article-7365.htm" title="松江时代城门票多少钱一张(松江时代城门票多少钱)">松江时代城门票多少钱一张(松江时代城门票多少钱)</a></li>
                        <li class="py-2"><a href="/html/category/article-7364.htm" title="猫咪三针疫苗的作用（猫咪三针疫苗包括哪些）">猫咪三针疫苗的作用（猫咪三针疫苗包括哪些）</a></li>
                        <li class="py-2"><a href="/html/category/article-7319.htm" title="动物疫苗价格查询表最新消息图片 动物疫苗价格查询表最新消息图片大全">动物疫苗价格查询表最新消息图片 动物疫苗价格查询表最新消息图片大全</a></li>
                        <li class="py-2"><a href="/html/category/article-7318.htm" title="符合动物医院法定条件是什么意思啊（符合动物医院法定条件的是）">符合动物医院法定条件是什么意思啊（符合动物医院法定条件的是）</a></li>
                        <li class="py-2"><a href="/html/category/article-6767.htm" title="办宠物医院需要什么资质（宠物医院开办批准手续）">办宠物医院需要什么资质（宠物医院开办批准手续）</a></li>
                        <li class="py-2"><a href="/html/category/article-6628.htm" title="财务bp是什么意思么叫财务bp(财务bp是指什么)">财务bp是什么意思么叫财务bp(财务bp是指什么)</a></li>
                        <li class="py-2"><a href="/html/category/article-7273.htm" title="广州市宠物领养中心电话地址（广州宠物领养中心具体地址）">广州市宠物领养中心电话地址（广州宠物领养中心具体地址）</a></li>
                        <li class="py-2"><a href="/html/category/article-6766.htm" title="宠物粮生产利润多少（宠物粮生产利润多少合适）">宠物粮生产利润多少（宠物粮生产利润多少合适）</a></li>
                        <li class="py-2"><a href="/html/category/article-7088.htm" title="克拉霉素缓释片哪个厂家效果好(克拉霉素片什么厂家好)">克拉霉素缓释片哪个厂家效果好(克拉霉素片什么厂家好)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
        <footer class="main-footer">
        <div class="copyrights">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6 text-center text-lg-left">
                        <p class="copyrights-text mb-3 mb-lg-0">
                          Laos Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-center text-lg-right">
                        <ul class="list-inline social mb-0">
                            <li class="list-inline-item"><a href="#" class="social-link"><i class="fa fa-facebook"></i></a><a href="#" class="social-link"><i class="fa fa-twitter"></i></a><a href="#" class="social-link"><i class="fa fa-youtube-play"></i></a><a href="#" class="social-link"><i class="fa fa-vimeo"></i></a><a href="#" class="social-link"><i class="fa fa-pinterest"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- JavaScript files-->
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery.cookie/jquery.cookie.js"> </script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/js/lightbox.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/front.js"></script>
</body>

</html>