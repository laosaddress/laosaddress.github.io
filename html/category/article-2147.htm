<!DOCTYPE html>
<html>

<head>
        <link rel="canonical" href="https://laosaddress.github.io/html/category/article-2147.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Spring Cloud入门-Config分布式配置中心(Hoxton版本) - Laos Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/laosaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">
    <!-- Bootstrap CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/font-awesome/css/font-awesome.min.css">
    <!-- Google fonts - Poppins-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,600">
    <!-- Lightbox-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/css/lightbox.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/fontastic.css">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/style.default.css" id="theme-stylesheet">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/custom.css">
    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a08ccaf1644b67c8d98a3563104919a8";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- navbar-->
    <header class="header">
        <nav class="navbar navbar-expand-lg fixed-top">
            <div class="container">
                                <a href="/" class="navbar-brand">
                    Laos Address
                </a>
                
                <button type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler navbar-toggler-right">Menu<i class="fa fa-bars ml-2"></i></button>
                <div id="navbarSupportedContent" class="collapse navbar-collapse">
                    <ul class="navbar-nav ml-auto">
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/" class="nav-link">首页</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/html/category/" class="nav-link">文章分类</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">关于</a></li>
                        <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">联系</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Hero Section-->
    <section class="hero">
        <div class="container text-center">
            <h1>Spring Cloud入门-Config分布式配置中心(Hoxton版本)</h1>
            <nav aria-label="breadcrumb" class="d-flex justify-content-center">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/" class="animsition-link">首页</a></li>
                    <li class="breadcrumb-item"><a href="/html/category/" class="animsition-link">文章分类</a></li>
                    <li aria-current="page" class="breadcrumb-item active">正文</li>
                </ol>
            </nav>
        </div>
    </section>
    <section>
        <div class="container">
            <div class="row" id="list">
                <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li><a href="#Spring_Cloud_4" rel="nofollow">Spring Cloud入门系列汇总</a></li> <li><a href="#_30" rel="nofollow">摘要</a></li> <li><a href="#Spring_Cloud_Config__36" rel="nofollow">Spring Cloud Config 简介</a></li> <li><a href="#Git_42" rel="nofollow">在Git仓库中准备配置信息</a></li> <li> <ul> <li><a href="#_48" rel="nofollow">配置仓库目录结构</a></li> <li><a href="#master_54" rel="nofollow">master分支下的配置信息</a></li> <li><a href="#dev_79" rel="nofollow">dev分支下的配置信息</a></li> </ul> </li> <li><a href="#configserver_104" rel="nofollow">创建config-server模块</a></li> <li> <ul> <li><a href="#pomxml_108" rel="nofollow">在pom.xml中添加相关依赖</a></li> <li><a href="#applicationyml_123" rel="nofollow">在application.yml中进行配置</a></li> <li><a href="#EnableConfigServer_155" rel="nofollow">在启动类上添加@EnableConfigServer注解来启用配置中心功能</a></li> <li><a href="#configserver_172" rel="nofollow">通过config-server获取配置信息</a></li> <li> <ul> <li><a href="#_176" rel="nofollow">获取配置文件信息的访问格式</a></li> <li><a href="#_187" rel="nofollow">占位符相关解释</a></li> <li><a href="#_195" rel="nofollow">获取配置信息演示</a></li> </ul> </li> </ul> </li> <li><a href="#configclient_222" rel="nofollow">创建config-client模块</a></li> <li> <ul> <li><a href="#pomxml_226" rel="nofollow">在pom.xml中添加相关依赖</a></li> <li><a href="#bootstrapyml_245" rel="nofollow">在bootstrap.yml中进行配置</a></li> <li><a href="#ConfigClientController_276" rel="nofollow">添加ConfigClientController类用于获取配置</a></li> <li><a href="#_295" rel="nofollow">演示从配置中心获取配置</a></li> <li><a href="#_307" rel="nofollow">获取子目录下的配置</a></li> <li><a href="#_330" rel="nofollow">刷新配置</a></li> </ul> </li> <li><a href="#_389" rel="nofollow">配置中心添加安全认证</a></li> <li> <ul> <li><a href="#configsecurityserver_393" rel="nofollow">创建config-security-server模块</a></li> <li><a href="#configclient_436" rel="nofollow">修改config-client的配置</a></li> </ul> </li> <li><a href="#configsever_479" rel="nofollow">config-sever集群搭建</a></li> <li><a href="#_530" rel="nofollow">使用到的模块</a></li> <li><a href="#_542" rel="nofollow">项目源码地址</a></li> </ul> </li> </ul> </div> <blockquote> <p>项目使用的Spring Cloud为Hoxton版本，Spring Boot为2.2.2.RELEASE版本</p> </blockquote> <h2><a id="Spring_Cloud_4" rel="nofollow"></a>Spring Cloud入门系列汇总</h2> <table> <thead> <tr> <th>序号</th> <th>内容</th> <th>链接地址</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>Spring Cloud入门-十分钟了解Spring Cloud</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103715146"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103715146</a></td> </tr> <tr> <td>2</td> <td>Spring Cloud入门-Eureka服务注册与发现(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103726655"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103726655</a></td> </tr> <tr> <td>3</td> <td>Spring Cloud入门-Ribbon服务消费者(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103729080"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103729080</a></td> </tr> <tr> <td>4</td> <td>Spring Cloud入门-Hystrix断路器(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103732497"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103732497</a></td> </tr> <tr> <td>5</td> <td>Spring Cloud入门-Hystrix Dashboard与Turbine断路器监控(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103734664"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103734664</a></td> </tr> <tr> <td>6</td> <td>Spring Cloud入门-OpenFeign服务消费者(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103735751"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103735751</a></td> </tr> <tr> <td>7</td> <td>Spring Cloud入门-Zuul服务网关(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103738851"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103738851</a></td> </tr> <tr> <td>8</td> <td>Spring Cloud入门-Config分布式配置中心(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103739628"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103739628</a></td> </tr> <tr> <td>9</td> <td>Spring Cloud入门-Bus消息总线(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103753372"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103753372</a></td> </tr> <tr> <td>10</td> <td>Spring Cloud入门-Sleuth服务链路跟踪(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103753896"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103753896</a></td> </tr> <tr> <td>11</td> <td>Spring Cloud入门-Consul服务注册发现与配置中心(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103756139"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103756139</a></td> </tr> <tr> <td>12</td> <td>Spring Cloud入门-Gateway服务网关(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103757927"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103757927</a></td> </tr> <tr> <td>13</td> <td>Spring Cloud入门-Admin服务监控中心(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103758697"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103758697</a></td> </tr> <tr> <td>14</td> <td>Spring Cloud入门-Oauth2授权的使用(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103761687"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103761687</a></td> </tr> <tr> <td>15</td> <td>Spring Cloud入门-Oauth2授权之JWT集成(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103763364"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103763364</a></td> </tr> <tr> <td>16</td> <td>Spring Cloud入门-Oauth2授权之基于JWT完成单点登录(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103766368"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103766368</a></td> </tr> <tr> <td>17</td> <td>Spring Cloud入门-Nacos实现注册和配置中心(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103769680"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103769680</a></td> </tr> <tr> <td>18</td> <td>Spring Cloud入门-Sentinel实现服务限流、熔断与降级(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103770879"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103770879</a></td> </tr> <tr> <td>19</td> <td>Spring Cloud入门-Seata处理分布式事务问题(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103786102"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103786102</a></td> </tr> <tr> <td>20</td> <td>Spring Cloud入门-汇总篇(Hoxton版本)</td> <td><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/ThinkWon/article/details/103786588"  rel="nofollow">https://blog.csdn.net/ThinkWon/article/details/103786588</a></td> </tr> </tbody> </table> <h2><a id="_30" rel="nofollow"></a>摘要</h2> <p>Spring Cloud Config 可以为微服务架构中的应用提供集中化的外部配置支持，它分为服务端和客户端两个部分，本文将对其用法进行详细介绍。</p> <h2><a id="Spring_Cloud_Config__36" rel="nofollow"></a>Spring Cloud Config 简介</h2> <p>Spring Cloud Config 分为服务端和客户端两个部分。服务端被称为分布式配置中心，它是个独立的应用，可以从配置仓库获取配置信息并提供给客户端使用。客户端可以通过配置中心来获取配置信息，在启动时加载配置。Spring Cloud Config 的配置中心默认采用Git来存储配置信息，所以天然就支持配置信息的版本管理，并且可以使用Git客户端来方便地管理和访问配置信息。</p> <h2><a id="Git_42" rel="nofollow"></a>在Git仓库中准备配置信息</h2> <blockquote> <p>由于Spring Cloud Config 需要一个存储配置信息的Git仓库，这里我们先在Git仓库中添加好配置文件再演示其功能，Git仓库地址为：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/JourWon/springcloud-config"  rel="nofollow">https://gitee.com/JourWon/springcloud-config</a></p> </blockquote> <h3><a id="_48" rel="nofollow"></a>配置仓库目录结构</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/9023aa5110646e895ec6207716ec18fc.jpg" alt="Spring Cloud入门-Config分布式配置中心(Hoxton版本)"></p> <h3><a id="master_54" rel="nofollow"></a>master分支下的配置信息</h3> <p>config-dev.yml:</p> <pre><code class="prism language-yml"><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token key atrule">info</span><span class="token punctuation">:</span><span class="token string">"config info for dev(master)"</span></code></pre> <p>config-test.yml:</p> <pre><code class="prism language-yml"><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token key atrule">info</span><span class="token punctuation">:</span><span class="token string">"config info for test(master)"</span></code></pre> <p>config-prod.yml:</p> <pre><code class="prism language-yml"><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token key atrule">info</span><span class="token punctuation">:</span><span class="token string">"config info for prod(master)"</span></code></pre> <h3><a id="dev_79" rel="nofollow"></a>dev分支下的配置信息</h3> <p>config-dev.yml:</p> <pre><code class="prism language-yml"><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token key atrule">info</span><span class="token punctuation">:</span><span class="token string">"config info for dev(dev)"</span></code></pre> <p>config-test.yml:</p> <pre><code class="prism language-yml"><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token key atrule">info</span><span class="token punctuation">:</span><span class="token string">"config info for test(dev)"</span></code></pre> <p>config-prod.yml:</p> <pre><code class="prism language-yml"><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token key atrule">info</span><span class="token punctuation">:</span><span class="token string">"config info for prod(dev)"</span></code></pre> <h2><a id="configserver_104" rel="nofollow"></a>创建config-server模块</h2> <blockquote> <p>这里我们创建一个config-server模块来演示Spring Cloud Config 作为配置中心的功能。</p> </blockquote> <h3><a id="pomxml_108" rel="nofollow"></a>在pom.xml中添加相关依赖</h3> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-config-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre> <h3><a id="applicationyml_123" rel="nofollow"></a>在application.yml中进行配置</h3> <pre><code class="prism language-yml"><span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">port</span><span class="token punctuation">:</span><span class="token number">8901</span><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">application</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>server<span class="token key atrule">cloud</span><span class="token punctuation">:</span><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">git</span><span class="token punctuation">:</span><span class="token comment"># 配置存储配置信息的Git仓库</span><span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/JourWon/springcloud<span class="token punctuation">-</span>config.git<span class="token key atrule">username</span><span class="token punctuation">:</span> JourWon<span class="token key atrule">password</span><span class="token punctuation">:</span><span class="token number">123456</span><span class="token comment"># 开启启动时直接从git获取配置</span><span class="token key atrule">clone-on-start</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token comment"># 获取子目录下的配置</span><span class="token comment">#          search-paths: '{application}'</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span><span class="token key atrule">client</span><span class="token punctuation">:</span><span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">service-url</span><span class="token punctuation">:</span><span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>8001/eureka/</code></pre> <h3><a id="EnableConfigServer_155" rel="nofollow"></a>在启动类上添加@EnableConfigServer注解来启用配置中心功能</h3> <pre><code class="prism language-java"><span class="token annotation punctuation">@EnableConfigServer</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">ConfigServerApplication</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ConfigServerApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h3><a id="configserver_172" rel="nofollow"></a>通过config-server获取配置信息</h3> <blockquote> <p>这里我们通过config-server来演示下如何获取配置信息。</p> </blockquote> <h4><a id="_176" rel="nofollow"></a>获取配置文件信息的访问格式</h4> <pre><code class="prism language-sh"># 获取配置信息 /{label}/{application}-{profile} # 获取配置文件信息 /{label}/{application}-{profile}.yml</code></pre> <h4><a id="_187" rel="nofollow"></a>占位符相关解释</h4> <ul> <li>application：代表应用名称，默认为配置文件中的spring.application.name，如果配置了spring.cloud.config.name，则为该名称；</li> <li>label：代表分支名称，对应配置文件中的spring.cloud.config.label；</li> <li>profile：代表环境名称，对应配置文件中的spring.cloud.config.profile。</li> </ul> <h4><a id="_195" rel="nofollow"></a>获取配置信息演示</h4> <p>启动eureka-server、config-server服务；</p> <p>访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8901/master/config-dev"  rel="nofollow">http://localhost:8901/master/config-dev</a>来获取master分支上dev环境的配置信息；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/0caf1987b3cab01385be3cf03369fc47.jpg" alt="Spring Cloud入门-Config分布式配置中心(Hoxton版本)"></p> <p>访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8901/master/config-dev.yml"  rel="nofollow">http://localhost:8901/master/config-dev.yml</a>来获取master分支上dev环境的配置文件信息，对比上面信息，可以看出配置信息和配置文件信息并不是同一个概念；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/3ec5005538db72898e889430934028cd.jpg" alt="Spring Cloud入门-Config分布式配置中心(Hoxton版本)"></p> <p>访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8901/master/config-test.yml"  rel="nofollow">http://localhost:8901/master/config-test.yml</a>来获取master分支上test环境的配置文件信息:</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/fcb609b78c7659cc693e952bf758e387.jpg" alt="Spring Cloud入门-Config分布式配置中心(Hoxton版本)"></p> <p>访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:8901/dev/config-dev.yml"  rel="nofollow">http://localhost:8901/dev/config-dev.yml</a>来获取dev分支上dev环境的配置文件信息:</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/69c9cf694b11dc62a47044991a8d9630.jpg" alt="Spring Cloud入门-Config分布式配置中心(Hoxton版本)"></p> <h2><a id="configclient_222" rel="nofollow"></a>创建config-client模块</h2> <blockquote> <p>我们创建一个config-client模块来从config-server获取配置。</p> </blockquote> <h3><a id="pomxml_226" rel="nofollow"></a>在pom.xml中添加相关依赖</h3> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre> <h3><a id="bootstrapyml_245" rel="nofollow"></a>在bootstrap.yml中进行配置</h3> <pre><code class="prism language-yml"><span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">port</span><span class="token punctuation">:</span><span class="token number">9001</span><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">application</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>client<span class="token key atrule">cloud</span><span class="token punctuation">:</span><span class="token comment"># config客户端配置</span><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token comment"># 分支名称</span><span class="token key atrule">label</span><span class="token punctuation">:</span> master<span class="token comment"># 启用配置后缀名称</span><span class="token key atrule">profile</span><span class="token punctuation">:</span> dev<span class="token comment"># 配置文件名称</span><span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token comment"># 配置中心地址</span><span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8901</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span><span class="token key atrule">client</span><span class="token punctuation">:</span><span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">service-url</span><span class="token punctuation">:</span><span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>8001/eureka/</code></pre> <h3><a id="ConfigClientController_276" rel="nofollow"></a>添加ConfigClientController类用于获取配置</h3> <pre><code class="prism language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">ConfigClientController</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${config.info}"</span><span class="token punctuation">)</span><span class="token keyword">private</span> String configInfo<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/configInfo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String<span class="token function">getConfigInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> configInfo<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h3><a id="_295" rel="nofollow"></a>演示从配置中心获取配置</h3> <p>启动eureka-server、config-server、config-client服务</p> <p>访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:9001/configInfo"  rel="nofollow">http://localhost:9001/configInfo</a>，可以获取到dev分支下dev环境的配置；</p> <pre><code class="prism language-sh">config info for dev(master)</code></pre> <h3><a id="_307" rel="nofollow"></a>获取子目录下的配置</h3> <blockquote> <p>我们不仅可以把每个项目的配置放在不同的Git仓库存储，也可以在一个Git仓库中存储多个项目的配置，此时就会用到在子目录中搜索配置信息的配置。</p> </blockquote> <p>首先我们需要在config-server中添加相关配置，用于搜索子目录中的配置，这里我们用到了application占位符，表示对于不同的应用，我们从对应应用名称的子目录中搜索配置，比如config子目录中的配置对应config应用；</p> <pre><code class="prism language-yml"><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">cloud</span><span class="token punctuation">:</span><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">git</span><span class="token punctuation">:</span><span class="token key atrule">search-paths</span><span class="token punctuation">:</span><span class="token string">'{application}'</span></code></pre> <p>访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:9001/configInfo"  rel="nofollow">http://localhost:9001/configInfo</a>进行测试，可以发现获取的是config子目录下的配置信息。</p> <pre><code class="prism language-sh">config info for config dir dev(master)</code></pre> <h3><a id="_330" rel="nofollow"></a>刷新配置</h3> <blockquote> <p>当Git仓库中的配置信息更改后，我们可以通过SpringBoot Actuator的refresh端点来刷新客户端配置信息，以下更改都需要在config-client中进行。</p> </blockquote> <p>在pom.xml中添加Actuator的依赖：</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre> <p>在bootstrap.yml中开启refresh端点：</p> <pre><code class="prism language-yml"><span class="token key atrule">management</span><span class="token punctuation">:</span><span class="token key atrule">endpoints</span><span class="token punctuation">:</span><span class="token key atrule">web</span><span class="token punctuation">:</span><span class="token key atrule">exposure</span><span class="token punctuation">:</span><span class="token key atrule">include</span><span class="token punctuation">:</span><span class="token string">'refresh'</span></code></pre> <p>在ConfigClientController类添加@RefreshScope注解用于刷新配置：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RefreshScope</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">ConfigClientController</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${config.info}"</span><span class="token punctuation">)</span><span class="token keyword">private</span> String configInfo<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/configInfo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String<span class="token function">getConfigInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> configInfo<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>重新启动config-client后，调用refresh端点进行配置刷新：</p> <p>使用post请求<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:9001/actuator/refresh"  rel="nofollow">http://localhost:9001/actuator/refresh</a></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/d35ce1700e95506da6800278817253bf.jpg" alt="Spring Cloud入门-Config分布式配置中心(Hoxton版本)"></p> <p>访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:9001/configInfo"  rel="nofollow">http://localhost:9001/configInfo</a>进行测试，可以发现配置信息已经刷新。</p> <pre><code class="prism language-sh">update config info for config dir dev(master)</code></pre> <h2><a id="_389" rel="nofollow"></a>配置中心添加安全认证</h2> <blockquote> <p>我们可以通过整合SpringSecurity来为配置中心添加安全认证。</p> </blockquote> <h3><a id="configsecurityserver_393" rel="nofollow"></a>创建config-security-server模块</h3> <p>在pom.xml中添加相关依赖：</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-config-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre> <p>在application.yml中进行配置：</p> <pre><code class="prism language-yml"><span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">port</span><span class="token punctuation">:</span><span class="token number">8905</span><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">application</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>security<span class="token punctuation">-</span>server<span class="token key atrule">cloud</span><span class="token punctuation">:</span><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">git</span><span class="token punctuation">:</span><span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/JourWon/springcloud<span class="token punctuation">-</span>config.git<span class="token key atrule">username</span><span class="token punctuation">:</span> JourWon<span class="token key atrule">password</span><span class="token punctuation">:</span><span class="token number">123456</span><span class="token key atrule">clone-on-start</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">security</span><span class="token punctuation">:</span><span class="token key atrule">user</span><span class="token punctuation">:</span><span class="token comment"># 配置用户名和密码</span><span class="token key atrule">name</span><span class="token punctuation">:</span> root<span class="token key atrule">password</span><span class="token punctuation">:</span><span class="token number">123456</span></code></pre> <p>启动config-security-server服务。</p> <h3><a id="configclient_436" rel="nofollow"></a>修改config-client的配置</h3> <p>添加bootstrap-security.yml配置文件，主要是配置了配置中心的用户名和密码：</p> <pre><code class="prism language-yml"><span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">port</span><span class="token punctuation">:</span><span class="token number">9002</span><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">application</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>client<span class="token key atrule">cloud</span><span class="token punctuation">:</span><span class="token comment"># config客户端配置</span><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token comment"># 分支名称</span><span class="token key atrule">label</span><span class="token punctuation">:</span> master<span class="token comment"># 启用配置后缀名称</span><span class="token key atrule">profile</span><span class="token punctuation">:</span> dev<span class="token comment"># 配置文件名称</span><span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token comment"># 配置中心地址</span><span class="token key atrule">uri</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span><span class="token number">8905</span><span class="token key atrule">username</span><span class="token punctuation">:</span> root<span class="token key atrule">password</span><span class="token punctuation">:</span><span class="token number">123456</span><span class="token key atrule">eureka</span><span class="token punctuation">:</span><span class="token key atrule">client</span><span class="token punctuation">:</span><span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">service-url</span><span class="token punctuation">:</span><span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>8001/eureka/</code></pre> <p>使用bootstrap-security.yml启动config-client服务；</p> <p>访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:9002/configInfo"  rel="nofollow">http://localhost:9002/configInfo</a>进行测试，发现可以获取到配置信息。</p> <pre><code class="prism language-yml">config info for dev(master)</code></pre> <h2><a id="configsever_479" rel="nofollow"></a>config-sever集群搭建</h2> <blockquote> <p>在微服务架构中，所有服务都从配置中心获取配置，配置中心一旦宕机，会发生很严重的问题，下面我们搭建一个双节点的配置中心集群来解决该问题。</p> </blockquote> <p>启动两个config-server分别运行在8902和8903端口上；</p> <p>添加config-client的配置文件bootstrap-cluster.yml，主要是添加了从注册中心获取配置中心地址的配置并去除了配置中心uri的配置：</p> <pre><code class="prism language-yml"><span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">port</span><span class="token punctuation">:</span><span class="token number">9003</span><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">application</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>client<span class="token key atrule">cloud</span><span class="token punctuation">:</span><span class="token comment"># config客户端配置</span><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token comment"># 分支名称</span><span class="token key atrule">label</span><span class="token punctuation">:</span> master<span class="token comment"># 启用配置后缀名称</span><span class="token key atrule">profile</span><span class="token punctuation">:</span> dev<span class="token comment"># 配置文件名称</span><span class="token key atrule">name</span><span class="token punctuation">:</span> config<span class="token comment"># config-sever集群搭建</span><span class="token key atrule">discovery</span><span class="token punctuation">:</span><span class="token key atrule">enabled</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">service-id</span><span class="token punctuation">:</span> config<span class="token punctuation">-</span>server<span class="token key atrule">eureka</span><span class="token punctuation">:</span><span class="token key atrule">client</span><span class="token punctuation">:</span><span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token key atrule">service-url</span><span class="token punctuation">:</span><span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>8001/eureka/</code></pre> <p>以bootstrap-cluster.yml启动config-client服务，注册中心显示信息如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/70007316c3304980e98a3a0d4ba24b43.jpg" alt="Spring Cloud入门-Config分布式配置中心(Hoxton版本)"></p> <p>访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://localhost:9003/configInfo"  rel="nofollow">http://localhost:9003/configInfo</a>，发现config-client可以获取到配置信息。</p> <pre><code>config info for config dir dev(master)</code></pre> <h2><a id="_530" rel="nofollow"></a>使用到的模块</h2> <pre><code class="prism language-sh">springcloud-learning ├── eureka-server -- eureka注册中心 ├── config-server -- 配置中心服务 ├── config-security-server -- 带安全认证的配置中心服务 └── config-client -- 获取配置的客户端服务</code></pre> <h2><a id="_542" rel="nofollow"></a>项目源码地址</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/JourWon/springcloud-learning"  rel="nofollow">GitHub项目源码地址</a></p> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2146.htm">SpringBoot线程池参数搜一堆资料还是不会配，我花一天测试换你此生明白。_在线工具</a></p>
                                                        <p>下一个：<a href="/html/category/article-2148.htm">C语言 推理证明带环链表详细过程_C 语言</a></p>
                                                    </div>
                                        </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-2226.htm" title="Springboot2整合activemq">Springboot2整合activemq</a></li>
                        <li class="py-2"><a href="/html/category/article-2228.htm" title="【java算法】二分查找算法详解">【java算法】二分查找算法详解</a></li>
                        <li class="py-2"><a href="/html/category/article-2229.htm" title="Spring Boot 2.3 新特性分层JAR详解">Spring Boot 2.3 新特性分层JAR详解</a></li>
                        <li class="py-2"><a href="/html/category/article-2209.htm" title="Feign客户端的使用方法详解">Feign客户端的使用方法详解</a></li>
                        <li class="py-2"><a href="/html/category/article-2191.htm" title="vue动态控制样式">vue动态控制样式</a></li>
                        <li class="py-2"><a href="/html/category/article-2203.htm" title="PHP与JSON的一些常用操作">PHP与JSON的一些常用操作</a></li>
                        <li class="py-2"><a href="/html/category/article-2194.htm" title="TensorFlow之张量的形状相关操作">TensorFlow之张量的形状相关操作</a></li>
                        <li class="py-2"><a href="/html/category/article-2230.htm" title="当我们更改小于当前序列号的AUTO_INCREMENT值时，MySQL将返回什么？">当我们更改小于当前序列号的AUTO_INCREMENT值时，MySQL将返回什么？</a></li>
                        <li class="py-2"><a href="/html/category/article-2218.htm" title="kotlin增加静态扩展函数">kotlin增加静态扩展函数</a></li>
                        <li class="py-2"><a href="/html/category/article-2211.htm" title="再谈JavaScript中bind、call、apply三个方法的区别与使用方式_javascript技巧">再谈JavaScript中bind、call、apply三个方法的区别与使用方式_javascript技巧</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">56</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
        <footer class="main-footer">
        <div class="copyrights">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6 text-center text-lg-left">
                        <p class="copyrights-text mb-3 mb-lg-0">
                          Laos Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-center text-lg-right">
                        <ul class="list-inline social mb-0">
                            <li class="list-inline-item"><a href="#" class="social-link"><i class="fa fa-facebook"></i></a><a href="#" class="social-link"><i class="fa fa-twitter"></i></a><a href="#" class="social-link"><i class="fa fa-youtube-play"></i></a><a href="#" class="social-link"><i class="fa fa-vimeo"></i></a><a href="#" class="social-link"><i class="fa fa-pinterest"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- JavaScript files-->
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery.cookie/jquery.cookie.js"> </script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/js/lightbox.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/front.js"></script>
</body>

</html>