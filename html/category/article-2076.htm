<!DOCTYPE html>
<html>

<head>
        <link rel="canonical" href="https://laosaddress.github.io/html/category/article-2076.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Unsafe类学习 - Laos Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/laosaddress/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="all,follow">
    <!-- Bootstrap CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome CSS-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/font-awesome/css/font-awesome.min.css">
    <!-- Google fonts - Poppins-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,600">
    <!-- Lightbox-->
    <link rel="stylesheet" href="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/css/lightbox.css">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/fontastic.css">
    <!-- theme stylesheet-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/style.default.css" id="theme-stylesheet">
    <!-- Custom stylesheet - for your changes-->
    <link rel="stylesheet" href="/assets/addons/xcblog/css/laosaddress/custom.css">
    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?a08ccaf1644b67c8d98a3563104919a8";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- navbar-->
    <header class="header">
        <nav class="navbar navbar-expand-lg fixed-top">
            <div class="container">
                                <a href="/" class="navbar-brand">
                    Laos Address
                </a>
                
                <button type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation" class="navbar-toggler navbar-toggler-right">Menu<i class="fa fa-bars ml-2"></i></button>
                <div id="navbarSupportedContent" class="collapse navbar-collapse">
                    <ul class="navbar-nav ml-auto">
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/" class="nav-link">首页</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="/html/category/" class="nav-link">文章分类</a></li>
                                                <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">关于</a></li>
                        <!-- Link-->
                        <li class="nav-item"> <a href="#" class="nav-link">联系</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Hero Section-->
    <section class="hero">
        <div class="container text-center">
            <h1>Unsafe类学习</h1>
            <nav aria-label="breadcrumb" class="d-flex justify-content-center">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/" class="animsition-link">首页</a></li>
                    <li class="breadcrumb-item"><a href="/html/category/" class="animsition-link">文章分类</a></li>
                    <li aria-current="page" class="breadcrumb-item active">正文</li>
                </ol>
            </nav>
        </div>
    </section>
    <section>
        <div class="container">
            <div class="row" id="list">
                <div class="col-md-9">
                          				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night-eighties"> <h1>Unsafe</h1> <p>Unfase为我们提供了访问底层的机制，仅供java核心类库使用。</p> <p>因此普通用户程序无法直接获取其实例，且unsafe的构造方法为私有的，但是我们可以通过反射获取。</p> <h3>1.获取unsafe</h3> <p>Unsafe有一个getUnsafe()方法可以获取实例：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@CallerSensitive</span><span class="token keyword">public</span><span class="token keyword">static</span> Unsafe<span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Class<span class="token class-name">var0</span><span class="token operator">=</span> Reflection<span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>VM<span class="token punctuation">.</span><span class="token function">isSystemDomainLoader</span><span class="token punctuation">(</span>var0<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">throw</span><span class="token keyword">new</span><span class="token class-name">SecurityException</span><span class="token punctuation">(</span><span class="token string">"Unsafe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> theUnsafe<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>其返回的是thUnsafe，<code>private static final Unsafe theUnsafe;</code>，因此我们可以反射获取该实例:</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token keyword">throws</span> NoSuchFieldException<span class="token punctuation">,</span> IllegalAccessException<span class="token punctuation">{<!-- --></span>         Unsafe unsafe<span class="token operator">=</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/**      * 获取Unsafe实例      * @return      * @throws NoSuchFieldException      * @throws IllegalAccessException      */</span><span class="token keyword">public</span><span class="token keyword">static</span> Unsafe<span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span> NoSuchFieldException<span class="token punctuation">,</span>IllegalAccessException<span class="token punctuation">{<!-- --></span>         Field field<span class="token operator">=</span> Unsafe<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"theUnsafe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">(</span>Unsafe<span class="token punctuation">)</span>field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h3>2.unsafe创建对象</h3> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">UnSafeDemo</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token keyword">throws</span> NoSuchFieldException<span class="token punctuation">,</span> IllegalAccessException<span class="token punctuation">,</span> InstantiationException<span class="token punctuation">{<!-- --></span><span class="token comment">//2.创建对象</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span> NoSuchFieldException<span class="token punctuation">,</span> IllegalAccessException<span class="token punctuation">,</span> InstantiationException<span class="token punctuation">{<!-- --></span>         Unsafe unsafe<span class="token operator">=</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Book book<span class="token operator">=</span><span class="token punctuation">(</span>Book<span class="token punctuation">)</span> unsafe<span class="token punctuation">.</span><span class="token function">allocateInstance</span><span class="token punctuation">(</span>Book<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\t"</span><span class="token operator">+</span>book<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span><span class="token class-name">Book</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span> String name<span class="token punctuation">;</span><span class="token keyword">private</span> Integer price<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token function">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         name<span class="token operator">=</span><span class="token string">"三国演义"</span><span class="token punctuation">;</span>         price<span class="token operator">=</span><span class="token number">77</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> String<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span> name<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> Integer<span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> price<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">setPrice</span><span class="token punctuation">(</span>Integer price<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>price<span class="token operator">=</span> price<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>打印结果为null null，因为：</p> <p><strong>allocateInstance</strong>方法用于创建一个类的实例，但是不会调用这个实例的构造方法，如果这个类还未被初始化，则初始化这个类。</p> <h3>3. 直接内存操作</h3> <pre><code class="prism language-java"><span class="token comment">// 分配内存(堆外)</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">long</span><span class="token function">allocateMemory</span><span class="token punctuation">(</span><span class="token keyword">long</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 重新分配内存</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">long</span><span class="token function">reallocateMemory</span><span class="token punctuation">(</span><span class="token keyword">long</span> var1<span class="token punctuation">,</span><span class="token keyword">long</span> var3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 内存初始化</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">setMemory</span><span class="token punctuation">(</span><span class="token keyword">long</span> var1<span class="token punctuation">,</span><span class="token keyword">long</span> var3<span class="token punctuation">,</span><span class="token keyword">byte</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 内存复制</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">copyMemory</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span> Object var4<span class="token punctuation">,</span><span class="token keyword">long</span> var5<span class="token punctuation">,</span><span class="token keyword">long</span> var7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 清除内存</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">freeMemory</span><span class="token punctuation">(</span><span class="token keyword">long</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>我们可以调用<code>allocateMemory</code>方法为进程分配堆外的本地内存，但因为这部分内存不受JVM管辖范围，因此需要<code>freeMemory</code>方法进行回收</p> <h3>4. CAS操作</h3> <p>JUC中大量运用了CAS操作，CAS操作是juc包的基础。Unsafe中提供了int,long和CAS即Compare and Swap，是一种无锁化的算法，如果非要说是一种锁的化，那就是乐观锁，只要在操作数据的时候才会进行比较更新，比悲观锁处理效率更高。</p> <p>参数1：要修改的对象</p> <p>参数2: 偏移量</p> <p>参数3:期望值oldValue</p> <p>参数4: 更新的值newValue</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">native</span><span class="token keyword">boolean</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span> Object var4<span class="token punctuation">,</span> Object var5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">native</span><span class="token keyword">boolean</span><span class="token function">compareAndSwapInt</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">int</span> var4<span class="token punctuation">,</span><span class="token keyword">int</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">final</span><span class="token keyword">native</span><span class="token keyword">boolean</span><span class="token function">compareAndSwapLong</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">long</span> var4<span class="token punctuation">,</span><span class="token keyword">long</span> var6<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h3>5. 异常抛出</h3> <p>使用Unsafe的throwException不需要再方法上抛出：</p> <pre><code class="prism language-java">unsafe<span class="token punctuation">.</span><span class="token function">throwException</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h3>6.线程相关</h3> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">unpark</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">monitorEnter</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">monitorExit</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">boolean</span><span class="token function">tryMonitorEnter</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>LockSupport中使用了park和unpark：</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">park</span><span class="token punctuation">(</span>Object blocker<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Thread t<span class="token operator">=</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setBlocker</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> blocker<span class="token punctuation">)</span><span class="token punctuation">;</span>         UNSAFE<span class="token punctuation">.</span><span class="token function">park</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token number">0</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setBlocker</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>线程需要阻塞时，调用park()方法，线程需要继续运行时，调用unpark()方法<br /><strong>monitorEnter:</strong><br /> 锁定对象，必须通过<code>monitorExit</code>方法才能解锁。可重入的。<br /> 加了<code>synchronized</code> 关键字的代码段，生成的字节码文件会多出<code>monitorenter</code> 和<code>monitorexit</code> 两条指令</p> <h3>7. putXXX 和getXXX</h3> <p>以int为例：</p> <ul> <li> <p><strong>getInt</strong>：</p> <ul> <li>第一个参数：读取对象</li> <li>第二个参数：内存偏移地址</li> </ul> </li> <li> <p><strong>putInt</strong>：</p> <ul> <li>第一个参数：修改对象</li> <li>第二个参数：内存偏移地址</li> <li>第三个参数：要修改的新值</li> </ul> </li> </ul> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">int</span><span class="token function">getInt</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putInt</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">int</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">getAndPut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">throws</span> InstantiationException<span class="token punctuation">,</span> NoSuchFieldException<span class="token punctuation">{<!-- --></span>         Unsafe unsafe<span class="token operator">=</span><span class="token function">getUnsafe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Book book<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">Book</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         Field field<span class="token operator">=</span> book<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         unsafe<span class="token punctuation">.</span><span class="token function">putObject</span><span class="token punctuation">(</span>book<span class="token punctuation">,</span>unsafe<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"新三国演义"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//新三国演义</span><span class="token punctuation">}</span></code></pre> <p><strong>unsafe.objectFieldOffset(field):</strong> 获取对应字段的内存偏移地址</p> <h3>8. volatile相关</h3> <p><strong>getXXXVolatile</strong>：以volatile的形式读取内存偏移地址为var2的对象的值。</p> <p><strong>putXXXVolatile</strong>：以volatile的形式修改内存偏移地址为var2的对象的值</p> <p>既然使用了volatile，就说明该操作保证了有序性和可见性。</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">native</span> Object<span class="token function">getObjectVolatile</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putObjectVolatile</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span> Object var4<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h3>9.order相关</h3> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putOrderedObject</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span> Object var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putOrderedInt</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">int</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">native</span><span class="token keyword">void</span><span class="token function">putOrderedLong</span><span class="token punctuation">(</span>Object var1<span class="token punctuation">,</span><span class="token keyword">long</span> var2<span class="token punctuation">,</span><span class="token keyword">long</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>保证了有序性的写和修改。仅保证了有序性。因此不保证可见性和原子性。</p> </div> 			                        <div class="col-md-12 mt-5">
                                                        <p>上一个：<a href="/html/category/article-2075.htm">实现可以拖动的悬浮框</a></p>
                                                        <p>下一个：<a href="/html/category/article-2077.htm">微信小程序自定义封装顶部导航栏</a></p>
                                                    </div>
                                        </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-5943.htm" title="动物疫苗在哪里购买（动物疫苗去哪里买）">动物疫苗在哪里购买（动物疫苗去哪里买）</a></li>
                        <li class="py-2"><a href="/html/category/article-6721.htm" title="歌曲人世间表达了什么（奔走相告）歌曲人世间原唱雷佳，叶问3演员表，坐88路车回家 电视剧，">歌曲人世间表达了什么（奔走相告）歌曲人世间原唱雷佳，叶问3演员表，坐88路车回家 电视剧，</a></li>
                        <li class="py-2"><a href="/html/category/article-7089.htm" title="动物医院英语怎么写怎么读 动物医院英语怎么写怎么读啊">动物医院英语怎么写怎么读 动物医院英语怎么写怎么读啊</a></li>
                        <li class="py-2"><a href="/html/category/article-6996.htm" title="大型动物医院设备采购流程（动物医院设施设备清单）">大型动物医院设备采购流程（动物医院设施设备清单）</a></li>
                        <li class="py-2"><a href="/html/category/article-7227.htm" title="姚明简历（临沂姚明简历）">姚明简历（临沂姚明简历）</a></li>
                        <li class="py-2"><a href="/html/category/article-6675.htm" title="宠物食品加工流程 宠物食品加工流程图">宠物食品加工流程 宠物食品加工流程图</a></li>
                        <li class="py-2"><a href="/html/category/article-6859.htm" title="和田宠物批发市场地址（和田宠物批发市场地址电话）">和田宠物批发市场地址（和田宠物批发市场地址电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-4600.htm" title="宠物粮行业协会投诉电话是多少（宠物粮行业协会投诉电话是多少号码）">宠物粮行业协会投诉电话是多少（宠物粮行业协会投诉电话是多少号码）</a></li>
                        <li class="py-2"><a href="/html/category/article-6206.htm" title="美味菜肴（美味菜肴什么意思）">美味菜肴（美味菜肴什么意思）</a></li>
                        <li class="py-2"><a href="/html/category/article-6582.htm" title="宠物诊所绝育（宠物诊所做绝育）">宠物诊所绝育（宠物诊所做绝育）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
        <footer class="main-footer">
        <div class="copyrights">
            <div class="container">
                <div class="row">
                    <div class="col-lg-6 text-center text-lg-left">
                        <p class="copyrights-text mb-3 mb-lg-0">
                          Laos Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 text-center text-lg-right">
                        <ul class="list-inline social mb-0">
                            <li class="list-inline-item"><a href="#" class="social-link"><i class="fa fa-facebook"></i></a><a href="#" class="social-link"><i class="fa fa-twitter"></i></a><a href="#" class="social-link"><i class="fa fa-youtube-play"></i></a><a href="#" class="social-link"><i class="fa fa-vimeo"></i></a><a href="#" class="social-link"><i class="fa fa-pinterest"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- JavaScript files-->
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery/jquery.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/jquery.cookie/jquery.cookie.js"> </script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/lightbox2/js/lightbox.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/laosaddress/front.js"></script>
</body>

</html>